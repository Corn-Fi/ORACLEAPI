{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vaultId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_orderId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_fromToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_toToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fromAmount",
          "type": "uint256"
        }
      ],
      "name": "checker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "connectorTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fromToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_toToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        }
      ],
      "name": "findBestPath",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_fromToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_connectorToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_toToken",
          "type": "address"
        }
      ],
      "name": "getAmountOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "routers",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/Resolver.sol",
    "119": "interfaces/IUniswapV2Router01.sol",
    "120": "interfaces/IUniswapV2Router02.sol",
    "25": "contracts/openzeppelin/contracts/math/SafeMath.sol"
  },
  "ast": {
    "absolutePath": "contracts/Resolver.sol",
    "exportedSymbols": {
      "Resolver": [
        2477
      ]
    },
    "id": 2478,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2104,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "interfaces/IController.sol",
        "file": "../interfaces/IController.sol",
        "id": 2105,
        "nodeType": "ImportDirective",
        "scope": 2478,
        "sourceUnit": 20428,
        "src": "57:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUniswapV2Router02.sol",
        "file": "../interfaces/IUniswapV2Router02.sol",
        "id": 2106,
        "nodeType": "ImportDirective",
        "scope": 2478,
        "sourceUnit": 20053,
        "src": "97:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "./openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 2107,
        "nodeType": "ImportDirective",
        "scope": 2478,
        "sourceUnit": 13788,
        "src": "144:60:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2108,
          "nodeType": "StructuredDocumentation",
          "src": "207:670:1",
          "text": " @title Corn Finance Gelato Resolver\n @author C.W.B.\n @notice When resolver contracts are called, the returned data is used as the\n input data on a seperate call. This means that the call to the resolver contract\n does not affect the gas used on the 'fillOrderGelato()' call.\n This resolver contract is used for finding the best swap path across numerous\n Uniswap V2 Routers. Paths will be either:\n   a.) from token --> to token\n   b.) from token --> connector token --> to token\n The best path and router are then encoded with the respective order data. The\n encoded data is used as input data for 'fillOrderGelato()' in the Controller\n contract."
        },
        "fullyImplemented": true,
        "id": 2477,
        "linearizedBaseContracts": [
          2477
        ],
        "name": "Resolver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2111,
            "libraryName": {
              "contractScope": null,
              "id": 2109,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8415,
              "src": "908:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$8415",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "902:27:1",
            "typeName": {
              "id": 2110,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "921:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "4e9c1118",
            "id": 2133,
            "mutability": "mutable",
            "name": "routers",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2477,
            "src": "935:546:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_IUniswapV2Router02_$20052_$dyn_storage",
              "typeString": "contract IUniswapV2Router02[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 2112,
                "name": "IUniswapV2Router02",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 20052,
                "src": "935:18:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IUniswapV2Router02_$20052",
                  "typeString": "contract IUniswapV2Router02"
                }
              },
              "id": 2113,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "935:20:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_IUniswapV2Router02_$20052_$dyn_storage_ptr",
                "typeString": "contract IUniswapV2Router02[]"
              }
            },
            "value": {
              "argumentTypes": null,
              "components": [
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "307861354530383239436143456438664644443444653363343336393663353746374437413637386666",
                      "id": 2115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1002:42:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    ],
                    "id": 2114,
                    "name": "IUniswapV2Router02",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20052,
                    "src": "983:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$20052_$",
                      "typeString": "type(contract IUniswapV2Router02)"
                    }
                  },
                  "id": 2116,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "983:62:1",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$20052",
                    "typeString": "contract IUniswapV2Router02"
                  }
                },
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "307831623032644138436230643039376542384435374131373562383863374438623437393937353036",
                      "id": 2118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1087:42:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    ],
                    "id": 2117,
                    "name": "IUniswapV2Router02",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20052,
                    "src": "1068:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$20052_$",
                      "typeString": "type(contract IUniswapV2Router02)"
                    }
                  },
                  "id": 2119,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1068:62:1",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$20052",
                    "typeString": "contract IUniswapV2Router02"
                  }
                },
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "307839343933306133323831363239353746463164643438393030614636374235343339333336634244",
                      "id": 2121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1172:42:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x94930a328162957FF1dd48900aF67B5439336cBD"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    ],
                    "id": 2120,
                    "name": "IUniswapV2Router02",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20052,
                    "src": "1153:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$20052_$",
                      "typeString": "type(contract IUniswapV2Router02)"
                    }
                  },
                  "id": 2122,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1153:62:1",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$20052",
                    "typeString": "contract IUniswapV2Router02"
                  }
                },
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "307843303738384133614434336437396161353342303963324561436333313341373837643164363037",
                      "id": 2124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1255:42:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0xC0788A3aD43d79aa53B09c2EaCc313A787d1d607"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    ],
                    "id": 2123,
                    "name": "IUniswapV2Router02",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20052,
                    "src": "1236:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$20052_$",
                      "typeString": "type(contract IUniswapV2Router02)"
                    }
                  },
                  "id": 2125,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1236:62:1",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$20052",
                    "typeString": "contract IUniswapV2Router02"
                  }
                },
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "307841313032303732413443303746303645433342343930304644433443374238306236633537343239",
                      "id": 2127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1338:42:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0xA102072A4C07F06EC3B4900FDC4C7B80b6c57429"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    ],
                    "id": 2126,
                    "name": "IUniswapV2Router02",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20052,
                    "src": "1319:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$20052_$",
                      "typeString": "type(contract IUniswapV2Router02)"
                    }
                  },
                  "id": 2128,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1319:62:1",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$20052",
                    "typeString": "contract IUniswapV2Router02"
                  }
                },
                {
                  "argumentTypes": null,
                  "arguments": [
                    {
                      "argumentTypes": null,
                      "hexValue": "307833613144383766323036443132343135663562304133334537383639363736383041416234663664",
                      "id": 2130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1418:42:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "value": "0x3a1D87f206D12415f5b0A33E786967680AAb4f6d"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    ],
                    "id": 2129,
                    "name": "IUniswapV2Router02",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20052,
                    "src": "1399:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$20052_$",
                      "typeString": "type(contract IUniswapV2Router02)"
                    }
                  },
                  "id": 2131,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "1399:62:1",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$20052",
                    "typeString": "contract IUniswapV2Router02"
                  }
                }
              ],
              "id": 2132,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "973:508:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_IUniswapV2Router02_$20052_$6_memory_ptr",
                "typeString": "contract IUniswapV2Router02[6] memory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "19b64015",
            "id": 2143,
            "mutability": "mutable",
            "name": "connectorTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2477,
            "src": "1487:404:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2134,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1487:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2135,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1487:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": {
              "argumentTypes": null,
              "components": [
                {
                  "argumentTypes": null,
                  "hexValue": "307838663343663761643233436433436144624439373335414666393538303233323339633641303633",
                  "id": 2136,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1532:42:1",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063"
                },
                {
                  "argumentTypes": null,
                  "hexValue": "307832373931426361316632646534363631454438384133304339394137613934343941613834313734",
                  "id": 2137,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1591:42:1",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
                },
                {
                  "argumentTypes": null,
                  "hexValue": "307830643530304231643845386546333145323143393964314462394136343434643341446631323730",
                  "id": 2138,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1651:42:1",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"
                },
                {
                  "argumentTypes": null,
                  "hexValue": "307837636542323366443662433061644435394536326163323535373832373063466631623966363139",
                  "id": 2139,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1713:42:1",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619"
                },
                {
                  "argumentTypes": null,
                  "hexValue": "307863323133324430354433316339313461383743363631314331303734384145623034423538653846",
                  "id": 2140,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1773:42:1",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xc2132D05D31c914a87C6611C10748AEb04B58e8F"
                },
                {
                  "argumentTypes": null,
                  "hexValue": "307838333137353344443730383743614336316142353634346233303836343263633163333344633133",
                  "id": 2141,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1833:42:1",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x831753DD7087CaC61aB5644b308642cc1c33Dc13"
                }
              ],
              "id": 2142,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "1522:369:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$6_memory_ptr",
                "typeString": "address payable[6] memory"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2185,
              "nodeType": "Block",
              "src": "2750:517:1",
              "statements": [
                {
                  "assignments": [
                    2162,
                    2165,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2162,
                      "mutability": "mutable",
                      "name": "router",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2185,
                      "src": "2833:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2161,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2833:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2165,
                      "mutability": "mutable",
                      "name": "path",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2185,
                      "src": "2849:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2849:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2164,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2849:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2171,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2167,
                        "name": "_fromToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2150,
                        "src": "2889:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2168,
                        "name": "_toToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2152,
                        "src": "2901:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2169,
                        "name": "_fromAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2154,
                        "src": "2911:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2166,
                      "name": "findBestPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2374,
                      "src": "2876:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$",
                        "typeString": "function (address,address,uint256) view returns (address,address[] memory,uint256)"
                      }
                    },
                    "id": 2170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(address,address[] memory,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2832:91:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 2172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3039:4:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2175,
                                "name": "IController",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20427,
                                "src": "3098:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IController_$20427_$",
                                  "typeString": "type(contract IController)"
                                }
                              },
                              "id": 2176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "fillOrderGelato",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20336,
                              "src": "3098:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_uint256_$_t_uint256_$_t_contract$_IUniswapV2Router02_$20052_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                                "typeString": "function IController.fillOrderGelato(uint256,uint256,contract IUniswapV2Router02,address[] memory)"
                              }
                            },
                            "id": 2177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3098:36:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2178,
                            "name": "_vaultId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2146,
                            "src": "3153:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2179,
                            "name": "_orderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2148,
                            "src": "3180:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2180,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2162,
                            "src": "3207:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2181,
                            "name": "path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2165,
                            "src": "3232:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2173,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3058:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3058:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 2182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3058:192:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "id": 2183,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3025:235:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "functionReturnParameters": 2160,
                  "id": 2184,
                  "nodeType": "Return",
                  "src": "3018:242:1"
                }
              ]
            },
            "documentation": {
              "id": 2144,
              "nodeType": "StructuredDocumentation",
              "src": "1987:555:1",
              "text": " @dev Gelato executor will call this function before calling 'fillOrderGelato()'\n in the Controller contract.\n @param _vaultId: Vault that holds the order\n @param _orderId: Order to fill\n @param _fromToken: ERC20 token being swapped\n @param _toToken: ERC20 token received from swap\n @param _fromAmount: Amount of '_fromToken' going into the swap\n @return (true: Gelato executor call 'fillOrderGelato()'; false: Gelato executor \n will not call 'fillOrderGelato()', Input data for 'fillOrderGelato()')"
            },
            "functionSelector": "e34ca65d",
            "id": 2186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checker",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2146,
                  "mutability": "mutable",
                  "name": "_vaultId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2186,
                  "src": "2573:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2573:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2148,
                  "mutability": "mutable",
                  "name": "_orderId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2186,
                  "src": "2600:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2150,
                  "mutability": "mutable",
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2186,
                  "src": "2627:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2627:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2152,
                  "mutability": "mutable",
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2186,
                  "src": "2656:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2656:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2154,
                  "mutability": "mutable",
                  "name": "_fromAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2186,
                  "src": "2683:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2683:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2563:145:1"
            },
            "returnParameters": {
              "id": 2160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2157,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2186,
                  "src": "2730:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2156,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2730:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2159,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2186,
                  "src": "2736:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2158,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2736:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2729:20:1"
            },
            "scope": 2477,
            "src": "2547:720:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2373,
              "nodeType": "Block",
              "src": "3718:1834:1",
              "statements": [
                {
                  "assignments": [
                    2204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2204,
                      "mutability": "mutable",
                      "name": "bestAmountOut",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2373,
                      "src": "3728:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2203,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3728:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2206,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 2205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3752:1:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3728:25:1"
                },
                {
                  "assignments": [
                    2208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2208,
                      "mutability": "mutable",
                      "name": "bestRouter",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2373,
                      "src": "3763:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2207,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3763:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2209,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3763:18:1"
                },
                {
                  "assignments": [
                    2211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2211,
                      "mutability": "mutable",
                      "name": "bestConnectorToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2373,
                      "src": "3791:26:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2210,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3791:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2212,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3791:26:1"
                },
                {
                  "assignments": [
                    2214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2214,
                      "mutability": "mutable",
                      "name": "fromToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2373,
                      "src": "3828:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2213,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3828:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2216,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2215,
                    "name": "_fromToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2189,
                    "src": "3848:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3828:30:1"
                },
                {
                  "assignments": [
                    2218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2218,
                      "mutability": "mutable",
                      "name": "toToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2373,
                      "src": "3868:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2217,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3868:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2220,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2219,
                    "name": "_toToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2191,
                    "src": "3886:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3868:26:1"
                },
                {
                  "assignments": [
                    2222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2222,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2373,
                      "src": "3904:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2221,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3904:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2224,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2223,
                    "name": "_amountIn",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2193,
                    "src": "3923:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3904:28:1"
                },
                {
                  "body": {
                    "id": 2305,
                    "nodeType": "Block",
                    "src": "4027:965:1",
                    "statements": [
                      {
                        "body": {
                          "id": 2303,
                          "nodeType": "Block",
                          "src": "4146:836:1",
                          "statements": [
                            {
                              "assignments": [
                                2248
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2248,
                                  "mutability": "mutable",
                                  "name": "connectorToken",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2303,
                                  "src": "4244:22:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 2247,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4244:7:1",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2268,
                              "initialValue": {
                                "argumentTypes": null,
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 2253,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 2249,
                                      "name": "fromToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2214,
                                      "src": "4269:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 2250,
                                        "name": "connectorTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2143,
                                        "src": "4282:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 2252,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 2251,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2237,
                                        "src": "4298:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4282:18:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "4269:31:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 2258,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 2254,
                                      "name": "toToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2218,
                                      "src": "4304:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 2255,
                                        "name": "connectorTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2143,
                                        "src": "4315:15:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 2257,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 2256,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2237,
                                        "src": "4331:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4315:18:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "4304:29:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "4269:64:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 2264,
                                    "name": "connectorTokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2143,
                                    "src": "4349:15:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 2266,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2265,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2237,
                                    "src": "4365:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4349:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 2267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "4269:98:1",
                                "trueExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 2262,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4344:1:1",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 2261,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4336:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2260,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4336:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 2263,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4336:10:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4244:123:1"
                            },
                            {
                              "assignments": [
                                2270
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2270,
                                  "mutability": "mutable",
                                  "name": "amountOut",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 2303,
                                  "src": "4455:17:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 2269,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4455:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 2280,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 2272,
                                      "name": "routers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2133,
                                      "src": "4509:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IUniswapV2Router02_$20052_$dyn_storage",
                                        "typeString": "contract IUniswapV2Router02[] storage ref"
                                      }
                                    },
                                    "id": 2274,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 2273,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2226,
                                      "src": "4517:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4509:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$20052",
                                      "typeString": "contract IUniswapV2Router02"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2275,
                                    "name": "amountIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2222,
                                    "src": "4542:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2276,
                                    "name": "fromToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2214,
                                    "src": "4573:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2277,
                                    "name": "connectorToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2248,
                                    "src": "4605:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2278,
                                    "name": "toToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2218,
                                    "src": "4642:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$20052",
                                      "typeString": "contract IUniswapV2Router02"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2271,
                                  "name": "getAmountOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2476,
                                  "src": "4475:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_contract$_IUniswapV2Router02_$20052_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (contract IUniswapV2Router02,uint256,address,address,address) view returns (uint256)"
                                  }
                                },
                                "id": 2279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4475:192:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4455:212:1"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2281,
                                  "name": "amountOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2270,
                                  "src": "4764:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2282,
                                  "name": "bestAmountOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2204,
                                  "src": "4776:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4764:25:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 2302,
                              "nodeType": "IfStatement",
                              "src": "4761:207:1",
                              "trueBody": {
                                "id": 2301,
                                "nodeType": "Block",
                                "src": "4791:177:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2286,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 2284,
                                        "name": "bestAmountOut",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2204,
                                        "src": "4813:13:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "id": 2285,
                                        "name": "amountOut",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2270,
                                        "src": "4829:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4813:25:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2287,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4813:25:1"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2295,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 2288,
                                        "name": "bestRouter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2208,
                                        "src": "4860:10:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 2291,
                                              "name": "routers",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2133,
                                              "src": "4881:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_contract$_IUniswapV2Router02_$20052_$dyn_storage",
                                                "typeString": "contract IUniswapV2Router02[] storage ref"
                                              }
                                            },
                                            "id": 2293,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 2292,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2226,
                                              "src": "4889:1:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "4881:10:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$20052",
                                              "typeString": "contract IUniswapV2Router02"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$20052",
                                              "typeString": "contract IUniswapV2Router02"
                                            }
                                          ],
                                          "id": 2290,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4873:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 2289,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4873:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 2294,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4873:19:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "4860:32:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 2296,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4860:32:1"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2299,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 2297,
                                        "name": "bestConnectorToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2211,
                                        "src": "4914:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "id": 2298,
                                        "name": "connectorToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2248,
                                        "src": "4935:14:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "4914:35:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 2300,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4914:35:1"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2240,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2237,
                            "src": "4113:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2241,
                              "name": "connectorTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2143,
                              "src": "4117:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4117:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4113:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2304,
                        "initializationExpression": {
                          "assignments": [
                            2237
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2237,
                              "mutability": "mutable",
                              "name": "j",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 2304,
                              "src": "4101:6:1",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2236,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "4101:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 2239,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4110:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4101:10:1"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 2245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4141:3:1",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 2244,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2237,
                              "src": "4141:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2246,
                          "nodeType": "ExpressionStatement",
                          "src": "4141:3:1"
                        },
                        "nodeType": "ForStatement",
                        "src": "4097:885:1"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2229,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2226,
                      "src": "4002:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2230,
                        "name": "routers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "4006:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IUniswapV2Router02_$20052_$dyn_storage",
                          "typeString": "contract IUniswapV2Router02[] storage ref"
                        }
                      },
                      "id": 2231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4006:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4002:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2306,
                  "initializationExpression": {
                    "assignments": [
                      2226
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2226,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2306,
                        "src": "3990:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2225,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3990:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2228,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3999:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3990:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4022:3:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2233,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2226,
                        "src": "4022:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2235,
                    "nodeType": "ExpressionStatement",
                    "src": "4022:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "3986:1006:1"
                },
                {
                  "assignments": [
                    2311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2311,
                      "mutability": "mutable",
                      "name": "bestPath",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2373,
                      "src": "5002:25:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2309,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5002:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2310,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5002:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2312,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5002:25:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2313,
                      "name": "bestConnectorToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2211,
                      "src": "5113:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5143:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5135:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2314,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5135:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5135:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5113:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2366,
                    "nodeType": "Block",
                    "src": "5322:170:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2340,
                            "name": "bestPath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2311,
                            "src": "5336:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "33",
                                "id": 2344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5361:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                }
                              ],
                              "id": 2343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "5347:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (address[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 2341,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5351:7:1",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 2342,
                                "length": null,
                                "nodeType": "ArrayTypeName",
                                "src": "5351:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                  "typeString": "address[]"
                                }
                              }
                            },
                            "id": 2345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5347:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "src": "5336:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 2347,
                        "nodeType": "ExpressionStatement",
                        "src": "5336:27:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2348,
                              "name": "bestPath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2311,
                              "src": "5377:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2350,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5386:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5377:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2351,
                            "name": "fromToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2214,
                            "src": "5391:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5377:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2353,
                        "nodeType": "ExpressionStatement",
                        "src": "5377:23:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2354,
                              "name": "bestPath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2311,
                              "src": "5414:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2356,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5423:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5414:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2357,
                            "name": "bestConnectorToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2211,
                            "src": "5428:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5414:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2359,
                        "nodeType": "ExpressionStatement",
                        "src": "5414:32:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2360,
                              "name": "bestPath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2311,
                              "src": "5460:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2362,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 2361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5469:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5460:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2363,
                            "name": "toToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2218,
                            "src": "5474:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5460:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2365,
                        "nodeType": "ExpressionStatement",
                        "src": "5460:21:1"
                      }
                    ]
                  },
                  "id": 2367,
                  "nodeType": "IfStatement",
                  "src": "5110:382:1",
                  "trueBody": {
                    "id": 2339,
                    "nodeType": "Block",
                    "src": "5147:124:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2319,
                            "name": "bestPath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2311,
                            "src": "5161:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 2323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5186:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 2322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "5172:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (address[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 2320,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5176:7:1",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 2321,
                                "length": null,
                                "nodeType": "ArrayTypeName",
                                "src": "5176:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                  "typeString": "address[]"
                                }
                              }
                            },
                            "id": 2324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5172:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "src": "5161:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 2326,
                        "nodeType": "ExpressionStatement",
                        "src": "5161:27:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2327,
                              "name": "bestPath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2311,
                              "src": "5202:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2329,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5211:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5202:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2330,
                            "name": "fromToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2214,
                            "src": "5216:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5202:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2332,
                        "nodeType": "ExpressionStatement",
                        "src": "5202:23:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2333,
                              "name": "bestPath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2311,
                              "src": "5239:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2335,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5248:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5239:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2336,
                            "name": "toToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2218,
                            "src": "5253:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5239:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2338,
                        "nodeType": "ExpressionStatement",
                        "src": "5239:21:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 2368,
                        "name": "bestRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2208,
                        "src": "5509:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2369,
                        "name": "bestPath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2311,
                        "src": "5521:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2370,
                        "name": "bestAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2204,
                        "src": "5531:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 2371,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5508:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(address,address[] memory,uint256)"
                    }
                  },
                  "functionReturnParameters": 2202,
                  "id": 2372,
                  "nodeType": "Return",
                  "src": "5501:44:1"
                }
              ]
            },
            "documentation": {
              "id": 2187,
              "nodeType": "StructuredDocumentation",
              "src": "3362:183:1",
              "text": " @param _fromToken: ERC20 token being swapped\n @param _toToken: ERC20 token received from swap\n @param _amountIn: Amount of '_fromToken' going into the swap "
            },
            "functionSelector": "3dfea772",
            "id": 2374,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "findBestPath",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2189,
                  "mutability": "mutable",
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2374,
                  "src": "3581:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3581:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2191,
                  "mutability": "mutable",
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2374,
                  "src": "3610:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3610:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2193,
                  "mutability": "mutable",
                  "name": "_amountIn",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2374,
                  "src": "3637:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3637:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3571:89:1"
            },
            "returnParameters": {
              "id": 2202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2196,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2374,
                  "src": "3682:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3682:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2199,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2374,
                  "src": "3691:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2197,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3691:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2198,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3691:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2201,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2374,
                  "src": "3709:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3681:36:1"
            },
            "scope": 2477,
            "src": "3550:2002:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2475,
              "nodeType": "Block",
              "src": "6243:754:1",
              "statements": [
                {
                  "assignments": [
                    2394
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2394,
                      "mutability": "mutable",
                      "name": "_path",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2475,
                      "src": "6253:22:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6253:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2393,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "6253:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2395,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6253:22:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2396,
                      "name": "_connectorToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2383,
                      "src": "6361:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6388:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6380:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2397,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6380:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6380:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6361:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2449,
                    "nodeType": "Block",
                    "src": "6561:157:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2423,
                            "name": "_path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2394,
                            "src": "6575:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "33",
                                "id": 2427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6597:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                }
                              ],
                              "id": 2426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "6583:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (address[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 2424,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6587:7:1",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 2425,
                                "length": null,
                                "nodeType": "ArrayTypeName",
                                "src": "6587:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                  "typeString": "address[]"
                                }
                              }
                            },
                            "id": 2428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6583:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "src": "6575:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 2430,
                        "nodeType": "ExpressionStatement",
                        "src": "6575:24:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2431,
                              "name": "_path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2394,
                              "src": "6613:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2433,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6619:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6613:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2434,
                            "name": "_fromToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2381,
                            "src": "6624:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6613:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2436,
                        "nodeType": "ExpressionStatement",
                        "src": "6613:21:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2437,
                              "name": "_path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2394,
                              "src": "6648:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2439,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6654:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6648:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2440,
                            "name": "_connectorToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2383,
                            "src": "6659:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6648:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2442,
                        "nodeType": "ExpressionStatement",
                        "src": "6648:26:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2443,
                              "name": "_path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2394,
                              "src": "6688:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2445,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 2444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6694:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6688:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2446,
                            "name": "_toToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2385,
                            "src": "6699:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6688:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2448,
                        "nodeType": "ExpressionStatement",
                        "src": "6688:19:1"
                      }
                    ]
                  },
                  "id": 2450,
                  "nodeType": "IfStatement",
                  "src": "6358:360:1",
                  "trueBody": {
                    "id": 2422,
                    "nodeType": "Block",
                    "src": "6392:117:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2402,
                            "name": "_path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2394,
                            "src": "6406:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 2406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6428:1:1",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 2405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "6414:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (address[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 2403,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6418:7:1",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 2404,
                                "length": null,
                                "nodeType": "ArrayTypeName",
                                "src": "6418:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                  "typeString": "address[]"
                                }
                              }
                            },
                            "id": 2407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6414:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "src": "6406:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 2409,
                        "nodeType": "ExpressionStatement",
                        "src": "6406:24:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2410,
                              "name": "_path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2394,
                              "src": "6444:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2412,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6450:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6444:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2413,
                            "name": "_fromToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2381,
                            "src": "6455:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6444:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2415,
                        "nodeType": "ExpressionStatement",
                        "src": "6444:21:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2416,
                              "name": "_path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2394,
                              "src": "6479:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2418,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6485:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6479:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 2419,
                            "name": "_toToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2385,
                            "src": "6490:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6479:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2421,
                        "nodeType": "ExpressionStatement",
                        "src": "6479:19:1"
                      }
                    ]
                  }
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 2468,
                        "nodeType": "Block",
                        "src": "6855:63:1",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2460,
                                "name": "amountsOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2458,
                                "src": "6876:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 2466,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 2464,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6904:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2461,
                                      "name": "_path",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2394,
                                      "src": "6887:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 2462,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "6887:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2463,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8265,
                                  "src": "6887:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6887:19:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6876:31:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 2389,
                            "id": 2467,
                            "nodeType": "Return",
                            "src": "6869:38:1"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 2469,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 2459,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 2458,
                            "mutability": "mutable",
                            "name": "amountsOut",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2469,
                            "src": "6826:27:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2456,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6826:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2457,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "6826:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "src": "6825:29:1"
                      },
                      "src": "6817:101:1"
                    },
                    {
                      "block": {
                        "id": 2472,
                        "nodeType": "Block",
                        "src": "6958:33:1",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6979:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "functionReturnParameters": 2389,
                            "id": 2471,
                            "nodeType": "Return",
                            "src": "6972:8:1"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 2473,
                      "nodeType": "TryCatchClause",
                      "parameters": null,
                      "src": "6952:39:1"
                    }
                  ],
                  "externalCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2453,
                        "name": "_amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2379,
                        "src": "6799:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2454,
                        "name": "_path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2394,
                        "src": "6810:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2451,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2377,
                        "src": "6777:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$20052",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "id": 2452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAmountsOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20935,
                      "src": "6777:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                      }
                    },
                    "id": 2455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6777:39:1",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 2474,
                  "nodeType": "TryStatement",
                  "src": "6773:218:1"
                }
              ]
            },
            "documentation": {
              "id": 2375,
              "nodeType": "StructuredDocumentation",
              "src": "5647:379:1",
              "text": " @param _router: Router used to perform a swap\n @param _amountIn: Amount of '_fromToken' going into the swap\n @param _fromToken: ERC20 token being swapped\n @param _connectorToken: ERC20 token that connects the 'from' and 'to' tokens\n @param _toToken: ERC20 token received from the swap\n @return Amount of '_toToken' received from the swap"
            },
            "functionSelector": "1ead1052",
            "id": 2476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountOut",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2377,
                  "mutability": "mutable",
                  "name": "_router",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2476,
                  "src": "6062:26:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$20052",
                    "typeString": "contract IUniswapV2Router02"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2376,
                    "name": "IUniswapV2Router02",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 20052,
                    "src": "6062:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$20052",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2379,
                  "mutability": "mutable",
                  "name": "_amountIn",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2476,
                  "src": "6099:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6099:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2381,
                  "mutability": "mutable",
                  "name": "_fromToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2476,
                  "src": "6127:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6127:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2383,
                  "mutability": "mutable",
                  "name": "_connectorToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2476,
                  "src": "6156:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6156:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2385,
                  "mutability": "mutable",
                  "name": "_toToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2476,
                  "src": "6190:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6190:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6052:160:1"
            },
            "returnParameters": {
              "id": 2389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2388,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2476,
                  "src": "6234:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6234:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6233:9:1"
            },
            "scope": 2477,
            "src": "6031:966:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2478,
        "src": "878:6121:1"
      }
    ],
    "src": "32:6967:1"
  },
  "bytecode": "61014060405273a5e0829caced8ffdd4de3c43696c57f7d7a678ff6080908152731b02da8cb0d097eb8d57a175b88c7d8b4799750660a0527394930a328162957ff1dd48900af67b5439336cbd60c05273c0788a3ad43d79aa53b09c2eacc313a787d1d60760e05273a102072a4c07f06ec3b4900fdc4c7b80b6c5742961010052733a1d87f206d12415f5b0a33e786967680aab4f6d610120526100a790600090600661016e565b506040805160c081018252738f3cf7ad23cd3cadbd9735aff958023239c6a0638152732791bca1f2de4661ed88a30c99a7a9449aa841746020820152730d500b1d8e8ef31e21c99d1db9a6444d3adf127091810191909152737ceb23fd6bc0add59e62ac25578270cff1b9f619606082015273c2132d05d31c914a87c6611c10748aeb04b58e8f608082015273831753dd7087cac61ab5644b308642cc1c33dc1360a082015261015b90600190600661016e565b5034801561016857600080fd5b506101f2565b8280548282559060005260206000209081019282156101c3579160200282015b828111156101c357825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061018e565b506101cf9291506101d3565b5090565b5b808211156101cf5780546001600160a01b03191681556001016101d4565b6109cc806102016000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806319b640151461005c5780631ead1052146100955780633dfea772146100ed5780634e9c11181461018e578063e34ca65d146101ab575b600080fd5b6100796004803603602081101561007257600080fd5b503561026e565b604080516001600160a01b039092168252519081900360200190f35b6100db600480360360a08110156100ab57600080fd5b506001600160a01b0381358116916020810135916040820135811691606081013582169160809091013516610295565b60408051918252519081900360200190f35b6101236004803603606081101561010357600080fd5b506001600160a01b0381358116916020810135909116906040013561055d565b60405180846001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015610178578181015183820152602001610160565b5050505090500194505050505060405180910390f35b610079600480360360208110156101a457600080fd5b50356107d4565b6101ed600480360360a08110156101c157600080fd5b508035906020810135906001600160a01b036040820135811691606081013590911690608001356107e1565b60405180831515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561023257818101518382015260200161021a565b50505050905090810190601f16801561025f5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6001818154811061027b57fe5b6000918252602090912001546001600160a01b0316905081565b600060606001600160a01b03841661032857604080516002808252606082018352909160208301908036833701905050905084816000815181106102d557fe5b60200260200101906001600160a01b031690816001600160a01b031681525050828160018151811061030357fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506103d4565b604080516003808252608082019092529060208201606080368337019050509050848160008151811061035757fe5b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061038557fe5b60200260200101906001600160a01b031690816001600160a01b03168152505082816002815181106103b357fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b6040805163d06ca61f60e01b815260048101888152602482019283528351604483015283516001600160a01b038b169363d06ca61f938b938793909291606401906020808601910280838360005b8381101561043a578181015183820152602001610422565b50505050905001935050505060006040518083038186803b15801561045e57600080fd5b505afa92505050801561052057506040513d6000823e601f3d908101601f19168201604052602081101561049157600080fd5b81019080805160405193929190846401000000008211156104b157600080fd5b9083019060208201858111156104c657600080fd5b82518660208202830111640100000000821117156104e357600080fd5b82525081516020918201928201910280838360005b838110156105105781810151838201526020016104f8565b5050505090500160405250505060015b61052e576000915050610554565b8151819061053d9060016108b6565b8151811061054757fe5b6020026020010151925050505b95945050505050565b6000606081808080888888835b6000548110156106825760005b6001548110156106795760006001828154811061059057fe5b6000918252602090912001546001600160a01b03878116911614806105d85750600182815481106105bd57fe5b6000918252602090912001546001600160a01b038681169116145b61060357600182815481106105e957fe5b6000918252602090912001546001600160a01b0316610606565b60005b905060006106386000858154811061061a57fe5b6000918252602090912001546001600160a01b03168689858a610295565b90508981111561066f578099506000848154811061065257fe5b6000918252602090912001546001600160a01b0316985090965086905b5050600101610577565b5060010161056a565b5060606001600160a01b03851661071457604080516002808252606082018352909160208301908036833701905050905083816000815181106106c157fe5b60200260200101906001600160a01b031690816001600160a01b03168152505082816001815181106106ef57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506107c0565b604080516003808252608082019092529060208201606080368337019050509050838160008151811061074357fe5b60200260200101906001600160a01b031690816001600160a01b031681525050848160018151811061077157fe5b60200260200101906001600160a01b031690816001600160a01b031681525050828160028151811061079f57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b949c949b5094995092975050505050505050565b6000818154811061027b57fe5b60006060600060606107f487878761055d565b5091509150600163c71a6d0660e01b8a8a858560405160240180858152602001848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561086557818101518382015260200161084d565b5050505090500195505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509350935050509550959350505050565b60006108f883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506108ff565b9392505050565b6000818484111561098e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561095357818101518382015260200161093b565b50505050905090810190601f1680156109805780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fea264697066735822122097affae93abd4c83c38ea3ca68dcc38cd2ff4be4ca2a6b84df350828169a728364736f6c634300060c0033",
  "bytecodeSha1": "6a706cbb0804b7d79985562dfa77af3729a756cf",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "Resolver",
  "coverageMap": {
    "branches": {
      "1": {
        "Resolver.findBestPath": {
          "26": [
            4269,
            4300,
            true
          ],
          "27": [
            4304,
            4333,
            true
          ],
          "28": [
            4764,
            4789,
            false
          ],
          "29": [
            5113,
            5145,
            false
          ]
        },
        "Resolver.getAmountOut": {
          "25": [
            6361,
            6390,
            false
          ]
        }
      },
      "119": {},
      "120": {},
      "25": {
        "SafeMath.sub": {
          "30": [
            1805,
            1811,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {
        "Resolver.checker": {
          "22": [
            3018,
            3260
          ]
        },
        "Resolver.findBestPath": {
          "9": [
            4813,
            4838
          ],
          "10": [
            4860,
            4892
          ],
          "11": [
            4914,
            4949
          ],
          "12": [
            4141,
            4144
          ],
          "13": [
            4022,
            4025
          ],
          "14": [
            5161,
            5188
          ],
          "15": [
            5202,
            5225
          ],
          "16": [
            5239,
            5260
          ],
          "17": [
            5336,
            5363
          ],
          "18": [
            5377,
            5400
          ],
          "19": [
            5414,
            5446
          ],
          "20": [
            5460,
            5481
          ],
          "21": [
            5501,
            5545
          ]
        },
        "Resolver.getAmountOut": {
          "0": [
            6406,
            6430
          ],
          "1": [
            6444,
            6465
          ],
          "2": [
            6479,
            6498
          ],
          "3": [
            6575,
            6599
          ],
          "4": [
            6613,
            6634
          ],
          "5": [
            6648,
            6674
          ],
          "6": [
            6688,
            6707
          ],
          "7": [
            6972,
            6980
          ],
          "8": [
            6869,
            6907
          ]
        }
      },
      "119": {},
      "120": {},
      "25": {
        "SafeMath.sub": {
          "23": [
            1351,
            1401
          ],
          "24": [
            1797,
            1826
          ]
        }
      }
    }
  },
  "dependencies": [
    "IUniswapV2Router01",
    "IUniswapV2Router02",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c806319b640151461005c5780631ead1052146100955780633dfea772146100ed5780634e9c11181461018e578063e34ca65d146101ab575b600080fd5b6100796004803603602081101561007257600080fd5b503561026e565b604080516001600160a01b039092168252519081900360200190f35b6100db600480360360a08110156100ab57600080fd5b506001600160a01b0381358116916020810135916040820135811691606081013582169160809091013516610295565b60408051918252519081900360200190f35b6101236004803603606081101561010357600080fd5b506001600160a01b0381358116916020810135909116906040013561055d565b60405180846001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019060200280838360005b83811015610178578181015183820152602001610160565b5050505090500194505050505060405180910390f35b610079600480360360208110156101a457600080fd5b50356107d4565b6101ed600480360360a08110156101c157600080fd5b508035906020810135906001600160a01b036040820135811691606081013590911690608001356107e1565b60405180831515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561023257818101518382015260200161021a565b50505050905090810190601f16801561025f5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6001818154811061027b57fe5b6000918252602090912001546001600160a01b0316905081565b600060606001600160a01b03841661032857604080516002808252606082018352909160208301908036833701905050905084816000815181106102d557fe5b60200260200101906001600160a01b031690816001600160a01b031681525050828160018151811061030357fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506103d4565b604080516003808252608082019092529060208201606080368337019050509050848160008151811061035757fe5b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061038557fe5b60200260200101906001600160a01b031690816001600160a01b03168152505082816002815181106103b357fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b6040805163d06ca61f60e01b815260048101888152602482019283528351604483015283516001600160a01b038b169363d06ca61f938b938793909291606401906020808601910280838360005b8381101561043a578181015183820152602001610422565b50505050905001935050505060006040518083038186803b15801561045e57600080fd5b505afa92505050801561052057506040513d6000823e601f3d908101601f19168201604052602081101561049157600080fd5b81019080805160405193929190846401000000008211156104b157600080fd5b9083019060208201858111156104c657600080fd5b82518660208202830111640100000000821117156104e357600080fd5b82525081516020918201928201910280838360005b838110156105105781810151838201526020016104f8565b5050505090500160405250505060015b61052e576000915050610554565b8151819061053d9060016108b6565b8151811061054757fe5b6020026020010151925050505b95945050505050565b6000606081808080888888835b6000548110156106825760005b6001548110156106795760006001828154811061059057fe5b6000918252602090912001546001600160a01b03878116911614806105d85750600182815481106105bd57fe5b6000918252602090912001546001600160a01b038681169116145b61060357600182815481106105e957fe5b6000918252602090912001546001600160a01b0316610606565b60005b905060006106386000858154811061061a57fe5b6000918252602090912001546001600160a01b03168689858a610295565b90508981111561066f578099506000848154811061065257fe5b6000918252602090912001546001600160a01b0316985090965086905b5050600101610577565b5060010161056a565b5060606001600160a01b03851661071457604080516002808252606082018352909160208301908036833701905050905083816000815181106106c157fe5b60200260200101906001600160a01b031690816001600160a01b03168152505082816001815181106106ef57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506107c0565b604080516003808252608082019092529060208201606080368337019050509050838160008151811061074357fe5b60200260200101906001600160a01b031690816001600160a01b031681525050848160018151811061077157fe5b60200260200101906001600160a01b031690816001600160a01b031681525050828160028151811061079f57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b949c949b5094995092975050505050505050565b6000818154811061027b57fe5b60006060600060606107f487878761055d565b5091509150600163c71a6d0660e01b8a8a858560405160240180858152602001848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561086557818101518382015260200161084d565b5050505090500195505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509350935050509550959350505050565b60006108f883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506108ff565b9392505050565b6000818484111561098e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561095357818101518382015260200161093b565b50505050905090810190601f1680156109805780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fea264697066735822122097affae93abd4c83c38ea3ca68dcc38cd2ff4be4ca2a6b84df350828169a728364736f6c634300060c0033",
  "deployedSourceMap": "878:6121:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:404;;;;;;;;;;;;;;;;-1:-1:-1;1487:404:1;;:::i;:::-;;;;-1:-1:-1;;;;;1487:404:1;;;;;;;;;;;;;;6031:966;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6031:966:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3550:2002;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3550:2002:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;3550:2002:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;935:546;;;;;;;;;;;;;;;;-1:-1:-1;935:546:1;;:::i;2547:720::-;;;;;;;;;;;;;;;;-1:-1:-1;2547:720:1;;;;;;;;-1:-1:-1;;;;;2547:720:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:404;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1487:404:1;;-1:-1:-1;1487:404:1;:::o;6031:966::-;6234:7;6253:22;-1:-1:-1;;;;;6361:29:1;;6358:360;;6414:16;;;6428:1;6414:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6414:16:1;6406:24;;6455:10;6444:5;6450:1;6444:8;;;;;;;;;;;;;:21;-1:-1:-1;;;;;6444:21:1;;;-1:-1:-1;;;;;6444:21:1;;;;;6490:8;6479:5;6485:1;6479:8;;;;;;;;;;;;;:19;-1:-1:-1;;;;;6479:19:1;;;-1:-1:-1;;;;;6479:19:1;;;;;6358:360;;;6583:16;;;6597:1;6583:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6583:16:1;6575:24;;6624:10;6613:5;6619:1;6613:8;;;;;;;;;;;;;:21;-1:-1:-1;;;;;6613:21:1;;;-1:-1:-1;;;;;6613:21:1;;;;;6659:15;6648:5;6654:1;6648:8;;;;;;;;;;;;;:26;-1:-1:-1;;;;;6648:26:1;;;-1:-1:-1;;;;;6648:26:1;;;;;6699:8;6688:5;6694:1;6688:8;;;;;;;;;;;;;:19;-1:-1:-1;;;;;6688:19:1;;;-1:-1:-1;;;;;6688:19:1;;;;;6358:360;6777:39;;;-1:-1:-1;;;6777:39:1;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6777:21:1;;;;;6799:9;;6810:5;;6777:39;;;;;;;;;;;;;;;-1:-1:-1;6777:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6777:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6777:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6773:218;;6979:1;6972:8;;;;;6773:218;6887:12;;6876:10;;6887:19;;6904:1;6887:16;:19::i;:::-;6876:31;;;;;;;;;;;;;;6869:38;;;;6031:966;;;;;;;;:::o;3550:2002::-;3682:7;3691:16;3682:7;;;;3848:10;3886:8;3923:9;3682:7;3986:1006;4006:7;:14;4002:18;;3986:1006;;;4101:6;4097:885;4117:15;:22;4113:26;;4097:885;;;4244:22;4282:15;4298:1;4282:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4269:31:1;;;4282:18;;4269:31;;:64;;;4315:15;4331:1;4315:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4304:29:1;;;4315:18;;4304:29;4269:64;:98;;4349:15;4365:1;4349:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4349:18:1;4269:98;;;4344:1;4269:98;4244:123;;4455:17;4475:192;4509:7;4517:1;4509:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4509:10:1;4542:8;4573:9;4605:14;4642:7;4475:12;:192::i;:::-;4455:212;;4776:13;4764:9;:25;4761:207;;;4829:9;4813:25;;4881:7;4889:1;4881:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4881:10:1;;-1:-1:-1;4935:14:1;;-1:-1:-1;4935:14:1;;4761:207;-1:-1:-1;;4141:3:1;;4097:885;;;-1:-1:-1;4022:3:1;;3986:1006;;;-1:-1:-1;5002:25:1;-1:-1:-1;;;;;5113:32:1;;5110:382;;5172:16;;;5186:1;5172:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5172:16:1;5161:27;;5216:9;5202:8;5211:1;5202:11;;;;;;;;;;;;;:23;-1:-1:-1;;;;;5202:23:1;;;-1:-1:-1;;;;;5202:23:1;;;;;5253:7;5239:8;5248:1;5239:11;;;;;;;;;;;;;:21;-1:-1:-1;;;;;5239:21:1;;;-1:-1:-1;;;;;5239:21:1;;;;;5110:382;;;5347:16;;;5361:1;5347:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5347:16:1;5336:27;;5391:9;5377:8;5386:1;5377:11;;;;;;;;;;;;;:23;-1:-1:-1;;;;;5377:23:1;;;-1:-1:-1;;;;;5377:23:1;;;;;5428:18;5414:8;5423:1;5414:11;;;;;;;;;;;;;:32;-1:-1:-1;;;;;5414:32:1;;;-1:-1:-1;;;;;5414:32:1;;;;;5474:7;5460:8;5469:1;5460:11;;;;;;;;;;;;;:21;-1:-1:-1;;;;;5460:21:1;;;-1:-1:-1;;;;;5460:21:1;;;;;5110:382;5509:10;;;;-1:-1:-1;5531:13:1;;-1:-1:-1;3550:2002:1;;-1:-1:-1;;;;;;;;3550:2002:1:o;935:546::-;;;;;;;;;;2547:720;2730:4;2736:12;2833:14;2849:21;2876:47;2889:10;2901:8;2911:11;2876:12;:47::i;:::-;2832:91;;;;;3039:4;3098:36;;;3153:8;3180;3207:6;3232:4;3058:192;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3058:192:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3058:192:1;;;;;;;-1:-1:-1;;;;;3058:192:1;;;;;;;;;;;3018:242;;;;;;2547:720;;;;;;;;:::o;1274:134:25:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:25:o;1692:187::-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;1797:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:25;;;1692:187::o",
  "language": "Solidity",
  "natspec": {
    "author": "C.W.B.",
    "kind": "dev",
    "methods": {
      "checker(uint256,uint256,address,address,uint256)": {
        "details": "Gelato executor will call this function before calling 'fillOrderGelato()' in the Controller contract.",
        "params": {
          "_fromAmount": ": Amount of '_fromToken' going into the swap",
          "_fromToken": ": ERC20 token being swapped",
          "_orderId": ": Order to fill",
          "_toToken": ": ERC20 token received from swap",
          "_vaultId": ": Vault that holds the order"
        },
        "returns": {
          "_0": "(true: Gelato executor call 'fillOrderGelato()'; false: Gelato executor  will not call 'fillOrderGelato()', Input data for 'fillOrderGelato()')"
        }
      },
      "findBestPath(address,address,uint256)": {
        "params": {
          "_amountIn": ": Amount of '_fromToken' going into the swap ",
          "_fromToken": ": ERC20 token being swapped",
          "_toToken": ": ERC20 token received from swap"
        }
      },
      "getAmountOut(address,uint256,address,address,address)": {
        "params": {
          "_amountIn": ": Amount of '_fromToken' going into the swap",
          "_connectorToken": ": ERC20 token that connects the 'from' and 'to' tokens",
          "_fromToken": ": ERC20 token being swapped",
          "_router": ": Router used to perform a swap",
          "_toToken": ": ERC20 token received from the swap"
        },
        "returns": {
          "_0": "Amount of '_toToken' received from the swap"
        }
      }
    },
    "notice": "When resolver contracts are called, the returned data is used as the input data on a seperate call. This means that the call to the resolver contract does not affect the gas used on the 'fillOrderGelato()' call. This resolver contract is used for finding the best swap path across numerous Uniswap V2 Routers. Paths will be either:   a.) from token --> to token   b.) from token --> connector token --> to token The best path and router are then encoded with the respective order data. The encoded data is used as input data for 'fillOrderGelato()' in the Controller contract.",
    "title": "Corn Finance Gelato Resolver",
    "version": 1
  },
  "offset": [
    878,
    6999
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19B64015 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x1EAD1052 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x3DFEA772 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x4E9C1118 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xE34CA65D EQ PUSH2 0x1AB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x80 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x178 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x160 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x79 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x40 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x232 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x21A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x25F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x27B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x328 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2D5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x303 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x357 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x385 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x3B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 DUP2 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 DUP4 MSTORE DUP4 MLOAD PUSH1 0x44 DUP4 ADD MSTORE DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP4 PUSH4 0xD06CA61F SWAP4 DUP12 SWAP4 DUP8 SWAP4 SWAP1 SWAP3 SWAP2 PUSH1 0x64 ADD SWAP1 PUSH1 0x20 DUP1 DUP7 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x422 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x520 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x4C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x510 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4F8 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP PUSH1 0x1 JUMPDEST PUSH2 0x52E JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x554 JUMP JUMPDEST DUP2 MLOAD DUP2 SWAP1 PUSH2 0x53D SWAP1 PUSH1 0x1 PUSH2 0x8B6 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x547 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP2 DUP1 DUP1 DUP1 DUP9 DUP9 DUP9 DUP4 JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x679 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x590 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x5D8 JUMPI POP PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5BD JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x603 JUMPI PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5E9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x606 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x638 PUSH1 0x0 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x61A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP10 DUP6 DUP11 PUSH2 0x295 JUMP JUMPDEST SWAP1 POP DUP10 DUP2 GT ISZERO PUSH2 0x66F JUMPI DUP1 SWAP10 POP PUSH1 0x0 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x652 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP9 POP SWAP1 SWAP7 POP DUP7 SWAP1 JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x56A JUMP JUMPDEST POP PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x714 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x6C1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x6EF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x60 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x743 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x771 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x79F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST SWAP5 SWAP13 SWAP5 SWAP12 POP SWAP5 SWAP10 POP SWAP3 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x27B JUMPI INVALID JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x60 PUSH2 0x7F4 DUP8 DUP8 DUP8 PUSH2 0x55D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x1 PUSH4 0xC71A6D06 PUSH1 0xE0 SHL DUP11 DUP11 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x865 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x84D JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP4 POP SWAP4 POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F8 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x8FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x98E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x953 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x93B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x980 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 0xAF STATICCALL 0xE9 GASPRICE 0xBD 0x4C DUP4 0xC3 DUP15 LOG3 0xCA PUSH9 0xDCC38CD2FF4BE4CA2A PUSH12 0x84DF350828169A728364736F PUSH13 0x634300060C0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        878,
        6999
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x19B64015"
    },
    "38": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "EQ",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1EAD1052"
    },
    "49": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x95"
    },
    "53": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3DFEA772"
    },
    "60": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xED"
    },
    "64": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E9C1118"
    },
    "71": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18E"
    },
    "75": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE34CA65D"
    },
    "82": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AB"
    },
    "86": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "DUP1",
      "path": "1"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        878,
        6999
      ],
      "op": "REVERT",
      "path": "1"
    },
    "92": {
      "offset": [
        1487,
        1891
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "93": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x79"
    },
    "96": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "98": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "DUP1",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "100": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "SUB",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "103": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "DUP2",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "LT",
      "path": "1"
    },
    "105": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "106": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72"
    },
    "109": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "112": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "DUP1",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "REVERT",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "115": {
      "op": "POP"
    },
    "116": {
      "offset": [
        1487,
        1891
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "117": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26E"
    },
    "120": {
      "fn": null,
      "jump": "i",
      "offset": [
        1487,
        1891
      ],
      "op": "JUMP",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "122": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "124": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "DUP1",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "132": {
      "op": "SHL"
    },
    "133": {
      "op": "SUB"
    },
    "134": {
      "offset": [
        1487,
        1891
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "135": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "AND",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "DUP3",
      "path": "1"
    },
    "138": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "139": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "140": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "141": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "DUP2",
      "path": "1"
    },
    "142": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "143": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "SUB",
      "path": "1"
    },
    "144": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "146": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "ADD",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        1487,
        1891
      ],
      "op": "RETURN",
      "path": "1"
    },
    "149": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "150": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDB"
    },
    "153": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "155": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "DUP1",
      "path": "1"
    },
    "156": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "157": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "SUB",
      "path": "1"
    },
    "158": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "160": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "DUP2",
      "path": "1"
    },
    "161": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "LT",
      "path": "1"
    },
    "162": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "163": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB"
    },
    "166": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "167": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "169": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "DUP1",
      "path": "1"
    },
    "170": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "REVERT",
      "path": "1"
    },
    "171": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "172": {
      "op": "POP"
    },
    "173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "179": {
      "op": "SHL"
    },
    "180": {
      "op": "SUB"
    },
    "181": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "DUP2",
      "path": "1"
    },
    "182": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "183": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "DUP2",
      "path": "1"
    },
    "184": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "AND",
      "path": "1"
    },
    "185": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "186": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "188": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "DUP2",
      "path": "1"
    },
    "189": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "ADD",
      "path": "1"
    },
    "190": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "191": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "192": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "194": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "DUP3",
      "path": "1"
    },
    "195": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "ADD",
      "path": "1"
    },
    "196": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "197": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "DUP2",
      "path": "1"
    },
    "198": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "AND",
      "path": "1"
    },
    "199": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "200": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "202": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "DUP2",
      "path": "1"
    },
    "203": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "ADD",
      "path": "1"
    },
    "204": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "205": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "DUP3",
      "path": "1"
    },
    "206": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "AND",
      "path": "1"
    },
    "207": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "208": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "210": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "211": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "212": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "ADD",
      "path": "1"
    },
    "213": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "214": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "AND",
      "path": "1"
    },
    "215": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x295"
    },
    "218": {
      "fn": "Resolver.getAmountOut",
      "jump": "i",
      "offset": [
        6031,
        6997
      ],
      "op": "JUMP",
      "path": "1"
    },
    "219": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "220": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "222": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "DUP1",
      "path": "1"
    },
    "223": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "224": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "225": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "DUP3",
      "path": "1"
    },
    "226": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "227": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "228": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "229": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "DUP2",
      "path": "1"
    },
    "230": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "231": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "SUB",
      "path": "1"
    },
    "232": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "234": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "ADD",
      "path": "1"
    },
    "235": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "236": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "RETURN",
      "path": "1"
    },
    "237": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "238": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x123"
    },
    "241": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "243": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP1",
      "path": "1"
    },
    "244": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "245": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SUB",
      "path": "1"
    },
    "246": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "248": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "249": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "LT",
      "path": "1"
    },
    "250": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "251": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x103"
    },
    "254": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "255": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "257": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP1",
      "path": "1"
    },
    "258": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "REVERT",
      "path": "1"
    },
    "259": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "260": {
      "op": "POP"
    },
    "261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "265": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "267": {
      "op": "SHL"
    },
    "268": {
      "op": "SUB"
    },
    "269": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "270": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "271": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "272": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "AND",
      "path": "1"
    },
    "273": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "274": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "276": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "277": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "ADD",
      "path": "1"
    },
    "278": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "279": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "280": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "281": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "AND",
      "path": "1"
    },
    "282": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "283": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "285": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "ADD",
      "path": "1"
    },
    "286": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "287": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x55D"
    },
    "290": {
      "fn": "Resolver.findBestPath",
      "jump": "i",
      "offset": [
        3550,
        5552
      ],
      "op": "JUMP",
      "path": "1"
    },
    "291": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "292": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "294": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "295": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP1",
      "path": "1"
    },
    "296": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP5",
      "path": "1"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "303": {
      "op": "SHL"
    },
    "304": {
      "op": "SUB"
    },
    "305": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "AND",
      "path": "1"
    },
    "306": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "307": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "308": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "310": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "ADD",
      "path": "1"
    },
    "311": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP1",
      "path": "1"
    },
    "312": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "314": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "ADD",
      "path": "1"
    },
    "315": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP4",
      "path": "1"
    },
    "316": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "317": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "318": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "320": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "ADD",
      "path": "1"
    },
    "321": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP3",
      "path": "1"
    },
    "322": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "323": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SUB",
      "path": "1"
    },
    "324": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP3",
      "path": "1"
    },
    "325": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "326": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP5",
      "path": "1"
    },
    "327": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "328": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "329": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "330": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "331": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "332": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "334": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "ADD",
      "path": "1"
    },
    "335": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "336": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "337": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP1",
      "path": "1"
    },
    "338": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "339": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "340": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "342": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "ADD",
      "path": "1"
    },
    "343": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "344": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "346": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "MUL",
      "path": "1"
    },
    "347": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP1",
      "path": "1"
    },
    "348": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP4",
      "path": "1"
    },
    "349": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP4",
      "path": "1"
    },
    "350": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "352": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "353": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP4",
      "path": "1"
    },
    "354": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "355": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "LT",
      "path": "1"
    },
    "356": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "357": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x178"
    },
    "360": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "361": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "362": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP2",
      "path": "1"
    },
    "363": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "ADD",
      "path": "1"
    },
    "364": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "365": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP4",
      "path": "1"
    },
    "366": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP3",
      "path": "1"
    },
    "367": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "ADD",
      "path": "1"
    },
    "368": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "369": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "371": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "ADD",
      "path": "1"
    },
    "372": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x160"
    },
    "375": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "JUMP",
      "path": "1"
    },
    "376": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "377": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "378": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "379": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "380": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "381": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "382": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "383": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "ADD",
      "path": "1"
    },
    "384": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "385": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "386": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "387": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "388": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "389": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "POP",
      "path": "1"
    },
    "390": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "392": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "393": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "DUP1",
      "path": "1"
    },
    "394": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "395": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SUB",
      "path": "1"
    },
    "396": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "397": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "RETURN",
      "path": "1"
    },
    "398": {
      "offset": [
        935,
        1481
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "399": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x79"
    },
    "402": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "404": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "DUP1",
      "path": "1"
    },
    "405": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "406": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "SUB",
      "path": "1"
    },
    "407": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "409": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "DUP2",
      "path": "1"
    },
    "410": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "LT",
      "path": "1"
    },
    "411": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "412": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A4"
    },
    "415": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "416": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "418": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "DUP1",
      "path": "1"
    },
    "419": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "REVERT",
      "path": "1"
    },
    "420": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "421": {
      "op": "POP"
    },
    "422": {
      "offset": [
        935,
        1481
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "423": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7D4"
    },
    "426": {
      "fn": "Resolver.findBestPath",
      "jump": "i",
      "offset": [
        935,
        1481
      ],
      "op": "JUMP",
      "path": "1"
    },
    "427": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "428": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1ED"
    },
    "431": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "433": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP1",
      "path": "1"
    },
    "434": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "435": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SUB",
      "path": "1"
    },
    "436": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "438": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "439": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "LT",
      "path": "1"
    },
    "440": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "441": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C1"
    },
    "444": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "445": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "447": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP1",
      "path": "1"
    },
    "448": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "REVERT",
      "path": "1"
    },
    "449": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "450": {
      "op": "POP"
    },
    "451": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP1",
      "path": "1"
    },
    "452": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "453": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "454": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "456": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "457": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ADD",
      "path": "1"
    },
    "458": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "459": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "466": {
      "op": "SHL"
    },
    "467": {
      "op": "SUB"
    },
    "468": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "470": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP3",
      "path": "1"
    },
    "471": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ADD",
      "path": "1"
    },
    "472": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "473": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "474": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "AND",
      "path": "1"
    },
    "475": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "476": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "478": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "479": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ADD",
      "path": "1"
    },
    "480": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "481": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "482": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "483": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "AND",
      "path": "1"
    },
    "484": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "485": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "487": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ADD",
      "path": "1"
    },
    "488": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "489": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E1"
    },
    "492": {
      "fn": "Resolver.checker",
      "jump": "i",
      "offset": [
        2547,
        3267
      ],
      "op": "JUMP",
      "path": "1"
    },
    "493": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "494": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "496": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "497": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP1",
      "path": "1"
    },
    "498": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP4",
      "path": "1"
    },
    "499": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "500": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "501": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "502": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "503": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "505": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ADD",
      "path": "1"
    },
    "506": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP1",
      "path": "1"
    },
    "507": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "509": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ADD",
      "path": "1"
    },
    "510": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP3",
      "path": "1"
    },
    "511": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "512": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SUB",
      "path": "1"
    },
    "513": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP3",
      "path": "1"
    },
    "514": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "515": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP4",
      "path": "1"
    },
    "516": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "517": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "518": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "519": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "520": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "521": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "523": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ADD",
      "path": "1"
    },
    "524": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "525": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "526": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP1",
      "path": "1"
    },
    "527": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "528": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "529": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "531": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ADD",
      "path": "1"
    },
    "532": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "533": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP1",
      "path": "1"
    },
    "534": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP4",
      "path": "1"
    },
    "535": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP4",
      "path": "1"
    },
    "536": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "538": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "539": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP4",
      "path": "1"
    },
    "540": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "541": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "LT",
      "path": "1"
    },
    "542": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "543": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x232"
    },
    "546": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "547": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "548": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "549": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ADD",
      "path": "1"
    },
    "550": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "551": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP4",
      "path": "1"
    },
    "552": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP3",
      "path": "1"
    },
    "553": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ADD",
      "path": "1"
    },
    "554": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "555": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "557": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ADD",
      "path": "1"
    },
    "558": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21A"
    },
    "561": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "JUMP",
      "path": "1"
    },
    "562": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "563": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "564": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "565": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "566": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "567": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "568": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "569": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "570": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "571": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ADD",
      "path": "1"
    },
    "572": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "573": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "575": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "AND",
      "path": "1"
    },
    "576": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP1",
      "path": "1"
    },
    "577": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "578": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25F"
    },
    "581": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "582": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP1",
      "path": "1"
    },
    "583": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP3",
      "path": "1"
    },
    "584": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SUB",
      "path": "1"
    },
    "585": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP1",
      "path": "1"
    },
    "586": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "587": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "589": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP4",
      "path": "1"
    },
    "590": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "592": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SUB",
      "path": "1"
    },
    "593": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "596": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "EXP",
      "path": "1"
    },
    "597": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SUB",
      "path": "1"
    },
    "598": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "NOT",
      "path": "1"
    },
    "599": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "AND",
      "path": "1"
    },
    "600": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP2",
      "path": "1"
    },
    "601": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "602": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "604": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "ADD",
      "path": "1"
    },
    "605": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "606": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "607": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "608": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "609": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "610": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "611": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "612": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "613": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "614": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "616": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "617": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "DUP1",
      "path": "1"
    },
    "618": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "619": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SUB",
      "path": "1"
    },
    "620": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "621": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "RETURN",
      "path": "1"
    },
    "622": {
      "offset": [
        1487,
        1891
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "623": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "625": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "DUP2",
      "path": "1"
    },
    "626": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "DUP2",
      "path": "1"
    },
    "627": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "628": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "DUP2",
      "path": "1"
    },
    "629": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "LT",
      "path": "1"
    },
    "630": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27B"
    },
    "633": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "634": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "INVALID",
      "path": "1"
    },
    "635": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "636": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "638": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "639": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "DUP3",
      "path": "1"
    },
    "640": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "641": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "643": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "644": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "645": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "646": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "ADD",
      "path": "1"
    },
    "647": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "654": {
      "op": "SHL"
    },
    "655": {
      "op": "SUB"
    },
    "656": {
      "offset": [
        1487,
        1891
      ],
      "op": "AND",
      "path": "1"
    },
    "657": {
      "fn": "Resolver.checker",
      "offset": [
        1487,
        1891
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "offset": [
        1487,
        1891
      ],
      "op": "DUP2",
      "path": "1"
    },
    "660": {
      "fn": "Resolver.checker",
      "jump": "o",
      "offset": [
        1487,
        1891
      ],
      "op": "JUMP",
      "path": "1"
    },
    "661": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "662": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6234,
        6241
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "664": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6253,
        6275
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "672": {
      "op": "SHL"
    },
    "673": {
      "op": "SUB"
    },
    "674": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6361,
        6390
      ],
      "op": "DUP5",
      "path": "1"
    },
    "675": {
      "branch": 25,
      "fn": "Resolver.getAmountOut",
      "offset": [
        6361,
        6390
      ],
      "op": "AND",
      "path": "1"
    },
    "676": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6358,
        6718
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x328"
    },
    "679": {
      "branch": 25,
      "fn": "Resolver.getAmountOut",
      "offset": [
        6358,
        6718
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "680": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x40"
    },
    "682": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "DUP1",
      "path": "1"
    },
    "683": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "684": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6428,
        6429
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "686": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "DUP1",
      "path": "1"
    },
    "687": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "DUP3",
      "path": "1"
    },
    "688": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "689": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "691": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "DUP3",
      "path": "1"
    },
    "692": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "ADD",
      "path": "1"
    },
    "693": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "DUP4",
      "path": "1"
    },
    "694": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "695": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "696": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "697": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "699": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "DUP4",
      "path": "1"
    },
    "700": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "ADD",
      "path": "1"
    },
    "701": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "702": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "DUP1",
      "path": "1"
    },
    "703": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "704": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "DUP4",
      "path": "1"
    },
    "705": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "CALLDATACOPY",
      "path": "1"
    },
    "706": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "ADD",
      "path": "1"
    },
    "707": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "708": {
      "op": "POP"
    },
    "709": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6414,
        6430
      ],
      "op": "POP",
      "path": "1"
    },
    "710": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6406,
        6430
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "711": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6406,
        6430
      ],
      "op": "POP",
      "path": "1"
    },
    "712": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6455,
        6465
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 1
    },
    "713": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6449
      ],
      "op": "DUP2",
      "path": "1"
    },
    "714": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6450,
        6451
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "716": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6452
      ],
      "op": "DUP2",
      "path": "1"
    },
    "717": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6452
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "718": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6452
      ],
      "op": "DUP2",
      "path": "1"
    },
    "719": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6452
      ],
      "op": "LT",
      "path": "1"
    },
    "720": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6452
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D5"
    },
    "723": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6452
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "724": {
      "dev": "Index out of range",
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6452
      ],
      "op": "INVALID",
      "path": "1"
    },
    "725": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6452
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "726": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "728": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6452
      ],
      "op": "MUL",
      "path": "1"
    },
    "729": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "731": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6452
      ],
      "op": "ADD",
      "path": "1"
    },
    "732": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6452
      ],
      "op": "ADD",
      "path": "1"
    },
    "733": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6465
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "740": {
      "op": "SHL"
    },
    "741": {
      "op": "SUB"
    },
    "742": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6465
      ],
      "op": "AND",
      "path": "1"
    },
    "743": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6465
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "744": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6465
      ],
      "op": "DUP2",
      "path": "1"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "751": {
      "op": "SHL"
    },
    "752": {
      "op": "SUB"
    },
    "753": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6465
      ],
      "op": "AND",
      "path": "1"
    },
    "754": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6465
      ],
      "op": "DUP2",
      "path": "1"
    },
    "755": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6465
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "756": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6465
      ],
      "op": "POP",
      "path": "1"
    },
    "757": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6444,
        6465
      ],
      "op": "POP",
      "path": "1"
    },
    "758": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6490,
        6498
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 2
    },
    "759": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6484
      ],
      "op": "DUP2",
      "path": "1"
    },
    "760": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6485,
        6486
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "762": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6487
      ],
      "op": "DUP2",
      "path": "1"
    },
    "763": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6487
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "764": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6487
      ],
      "op": "DUP2",
      "path": "1"
    },
    "765": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6487
      ],
      "op": "LT",
      "path": "1"
    },
    "766": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6487
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x303"
    },
    "769": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6487
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "770": {
      "dev": "Index out of range",
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6487
      ],
      "op": "INVALID",
      "path": "1"
    },
    "771": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6487
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "772": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6487
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "774": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6487
      ],
      "op": "MUL",
      "path": "1"
    },
    "775": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6487
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "777": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6487
      ],
      "op": "ADD",
      "path": "1"
    },
    "778": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6487
      ],
      "op": "ADD",
      "path": "1"
    },
    "779": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6498
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "784": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "786": {
      "op": "SHL"
    },
    "787": {
      "op": "SUB"
    },
    "788": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6498
      ],
      "op": "AND",
      "path": "1"
    },
    "789": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6498
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "790": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "797": {
      "op": "SHL"
    },
    "798": {
      "op": "SUB"
    },
    "799": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6498
      ],
      "op": "AND",
      "path": "1"
    },
    "800": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "801": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6498
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "802": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6498
      ],
      "op": "POP",
      "path": "1"
    },
    "803": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6479,
        6498
      ],
      "op": "POP",
      "path": "1"
    },
    "804": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6358,
        6718
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D4"
    },
    "807": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6358,
        6718
      ],
      "op": "JUMP",
      "path": "1"
    },
    "808": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6358,
        6718
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "809": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x40"
    },
    "811": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "DUP1",
      "path": "1"
    },
    "812": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "813": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6597,
        6598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "815": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "DUP1",
      "path": "1"
    },
    "816": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "DUP3",
      "path": "1"
    },
    "817": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "818": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "820": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "DUP3",
      "path": "1"
    },
    "821": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "ADD",
      "path": "1"
    },
    "822": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "823": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "824": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "825": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "826": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "828": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "DUP3",
      "path": "1"
    },
    "829": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "ADD",
      "path": "1"
    },
    "830": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "832": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "DUP1",
      "path": "1"
    },
    "833": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "834": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "DUP4",
      "path": "1"
    },
    "835": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "CALLDATACOPY",
      "path": "1"
    },
    "836": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "ADD",
      "path": "1"
    },
    "837": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "838": {
      "op": "POP"
    },
    "839": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6583,
        6599
      ],
      "op": "POP",
      "path": "1"
    },
    "840": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6575,
        6599
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "841": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6575,
        6599
      ],
      "op": "POP",
      "path": "1"
    },
    "842": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6624,
        6634
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 4
    },
    "843": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6618
      ],
      "op": "DUP2",
      "path": "1"
    },
    "844": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6619,
        6620
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "846": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6621
      ],
      "op": "DUP2",
      "path": "1"
    },
    "847": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6621
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "848": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6621
      ],
      "op": "DUP2",
      "path": "1"
    },
    "849": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6621
      ],
      "op": "LT",
      "path": "1"
    },
    "850": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6621
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x357"
    },
    "853": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6621
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "854": {
      "dev": "Index out of range",
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6621
      ],
      "op": "INVALID",
      "path": "1"
    },
    "855": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6621
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "856": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6621
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "858": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6621
      ],
      "op": "MUL",
      "path": "1"
    },
    "859": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6621
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "861": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6621
      ],
      "op": "ADD",
      "path": "1"
    },
    "862": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6621
      ],
      "op": "ADD",
      "path": "1"
    },
    "863": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6634
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "870": {
      "op": "SHL"
    },
    "871": {
      "op": "SUB"
    },
    "872": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6634
      ],
      "op": "AND",
      "path": "1"
    },
    "873": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6634
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "874": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6634
      ],
      "op": "DUP2",
      "path": "1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "881": {
      "op": "SHL"
    },
    "882": {
      "op": "SUB"
    },
    "883": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6634
      ],
      "op": "AND",
      "path": "1"
    },
    "884": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6634
      ],
      "op": "DUP2",
      "path": "1"
    },
    "885": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6634
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "886": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6634
      ],
      "op": "POP",
      "path": "1"
    },
    "887": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6613,
        6634
      ],
      "op": "POP",
      "path": "1"
    },
    "888": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6659,
        6674
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 5
    },
    "889": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6653
      ],
      "op": "DUP2",
      "path": "1"
    },
    "890": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6654,
        6655
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "892": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6656
      ],
      "op": "DUP2",
      "path": "1"
    },
    "893": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6656
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "894": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6656
      ],
      "op": "DUP2",
      "path": "1"
    },
    "895": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6656
      ],
      "op": "LT",
      "path": "1"
    },
    "896": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6656
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x385"
    },
    "899": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6656
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "900": {
      "dev": "Index out of range",
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6656
      ],
      "op": "INVALID",
      "path": "1"
    },
    "901": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6656
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "902": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6656
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "904": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6656
      ],
      "op": "MUL",
      "path": "1"
    },
    "905": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6656
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "907": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6656
      ],
      "op": "ADD",
      "path": "1"
    },
    "908": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6656
      ],
      "op": "ADD",
      "path": "1"
    },
    "909": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6674
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "916": {
      "op": "SHL"
    },
    "917": {
      "op": "SUB"
    },
    "918": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6674
      ],
      "op": "AND",
      "path": "1"
    },
    "919": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6674
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "920": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6674
      ],
      "op": "DUP2",
      "path": "1"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "927": {
      "op": "SHL"
    },
    "928": {
      "op": "SUB"
    },
    "929": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6674
      ],
      "op": "AND",
      "path": "1"
    },
    "930": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6674
      ],
      "op": "DUP2",
      "path": "1"
    },
    "931": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6674
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "932": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6674
      ],
      "op": "POP",
      "path": "1"
    },
    "933": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6648,
        6674
      ],
      "op": "POP",
      "path": "1"
    },
    "934": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6699,
        6707
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 6
    },
    "935": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6693
      ],
      "op": "DUP2",
      "path": "1"
    },
    "936": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6694,
        6695
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "938": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6696
      ],
      "op": "DUP2",
      "path": "1"
    },
    "939": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6696
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "940": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6696
      ],
      "op": "DUP2",
      "path": "1"
    },
    "941": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6696
      ],
      "op": "LT",
      "path": "1"
    },
    "942": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6696
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B3"
    },
    "945": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6696
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "946": {
      "dev": "Index out of range",
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6696
      ],
      "op": "INVALID",
      "path": "1"
    },
    "947": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6696
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "948": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6696
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "950": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6696
      ],
      "op": "MUL",
      "path": "1"
    },
    "951": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6696
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "953": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6696
      ],
      "op": "ADD",
      "path": "1"
    },
    "954": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6696
      ],
      "op": "ADD",
      "path": "1"
    },
    "955": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6707
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "962": {
      "op": "SHL"
    },
    "963": {
      "op": "SUB"
    },
    "964": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6707
      ],
      "op": "AND",
      "path": "1"
    },
    "965": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6707
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "966": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6707
      ],
      "op": "DUP2",
      "path": "1"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "op": "SUB"
    },
    "975": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6707
      ],
      "op": "AND",
      "path": "1"
    },
    "976": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6707
      ],
      "op": "DUP2",
      "path": "1"
    },
    "977": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6707
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "978": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6707
      ],
      "op": "POP",
      "path": "1"
    },
    "979": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6688,
        6707
      ],
      "op": "POP",
      "path": "1"
    },
    "980": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6358,
        6718
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "981": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "983": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "984": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "985": {
      "op": "PUSH4",
      "value": "0xD06CA61F"
    },
    "990": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "992": {
      "op": "SHL"
    },
    "993": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "994": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "995": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "997": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "998": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "999": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1000": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1001": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1002": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1004": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1005": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1006": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1007": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1008": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1009": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1010": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1011": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1013": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1014": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1015": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1016": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1017": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1024": {
      "op": "SHL"
    },
    "1025": {
      "op": "SUB"
    },
    "1026": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6798
      ],
      "op": "DUP12",
      "path": "1"
    },
    "1027": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6798
      ],
      "op": "AND",
      "path": "1"
    },
    "1028": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6798
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1029": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6798
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD06CA61F"
    },
    "1034": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6798
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1035": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6799,
        6808
      ],
      "op": "DUP12",
      "path": "1"
    },
    "1036": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6799,
        6808
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1037": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6810,
        6815
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1038": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6810,
        6815
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1039": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1040": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1041": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1042": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1044": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1045": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1046": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1048": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1049": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1050": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1051": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1052": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MUL",
      "path": "1"
    },
    "1053": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1054": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1055": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1058": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1059": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1060": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1061": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "LT",
      "path": "1"
    },
    "1062": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1063": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43A"
    },
    "1066": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1067": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1068": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1069": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1070": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1071": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1072": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1073": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1074": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1075": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1077": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1078": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x422"
    },
    "1081": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1082": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1083": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1084": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1085": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1086": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1087": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1088": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1089": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1090": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1091": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1092": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1093": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1094": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1095": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1097": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1099": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1100": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1101": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1102": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SUB",
      "path": "1"
    },
    "1103": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1104": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1105": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1106": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1107": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1108": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1109": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1110": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x45E"
    },
    "1113": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1114": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1116": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1117": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1118": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1119": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1120": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "GAS",
      "path": "1"
    },
    "1121": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1122": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1123": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1124": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1125": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1126": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1127": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1128": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x520"
    },
    "1131": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1132": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1133": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1135": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1136": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1137": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1139": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1140": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1141": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1143": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1144": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1145": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1146": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1149": {
      "op": "NOT"
    },
    "1150": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "AND",
      "path": "1"
    },
    "1151": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1152": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1153": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1155": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1156": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1158": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1159": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "LT",
      "path": "1"
    },
    "1160": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1161": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x491"
    },
    "1164": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1165": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1167": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1168": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1169": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1170": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1171": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1172": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1173": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1174": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1175": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1176": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1178": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1179": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1180": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1181": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1182": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1183": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1184": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH5",
      "path": "1",
      "value": "0x100000000"
    },
    "1190": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1191": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "GT",
      "path": "1"
    },
    "1192": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1193": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B1"
    },
    "1196": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1197": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1199": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1200": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1201": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1202": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1203": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1204": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1205": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1206": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1208": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1209": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1210": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1211": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1212": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "GT",
      "path": "1"
    },
    "1213": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1214": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C6"
    },
    "1217": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1218": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1220": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1221": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1222": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1223": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1224": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1225": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1226": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1228": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1229": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MUL",
      "path": "1"
    },
    "1230": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1231": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1232": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "GT",
      "path": "1"
    },
    "1233": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH5",
      "path": "1",
      "value": "0x100000000"
    },
    "1239": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1240": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "GT",
      "path": "1"
    },
    "1241": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "OR",
      "path": "1"
    },
    "1242": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1243": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E3"
    },
    "1246": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1247": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1249": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1250": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1251": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1252": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1253": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1254": {
      "op": "POP"
    },
    "1255": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1256": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1257": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1259": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1260": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1261": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1262": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1263": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1264": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1265": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1266": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MUL",
      "path": "1"
    },
    "1267": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1268": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1269": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1270": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1272": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1273": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1274": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1275": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "LT",
      "path": "1"
    },
    "1276": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1277": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x510"
    },
    "1280": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1281": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1282": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1283": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1284": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1285": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1286": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1287": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1288": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1289": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1291": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1292": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F8"
    },
    "1295": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1296": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1297": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1298": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1299": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1300": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1301": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1302": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1303": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "ADD",
      "path": "1"
    },
    "1304": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1306": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1307": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1308": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1309": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "POP",
      "path": "1"
    },
    "1310": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1312": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6777,
        6816
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1313": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6773,
        6991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x52E"
    },
    "1316": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6773,
        6991
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1317": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6979,
        6980
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x0"
    },
    "1319": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6972,
        6980
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1320": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6972,
        6980
      ],
      "op": "POP",
      "path": "1"
    },
    "1321": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6972,
        6980
      ],
      "op": "POP",
      "path": "1"
    },
    "1322": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6972,
        6980
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x554"
    },
    "1325": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6972,
        6980
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1326": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6773,
        6991
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1327": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6887,
        6899
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 8
    },
    "1328": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6887,
        6899
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1329": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6886
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1330": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6886
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1331": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6887,
        6906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53D"
    },
    "1334": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6887,
        6906
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1335": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6904,
        6905
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1337": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6887,
        6903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8B6"
    },
    "1340": {
      "fn": "Resolver.getAmountOut",
      "jump": "i",
      "offset": [
        6887,
        6906
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1341": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6887,
        6906
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1342": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6907
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1343": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6907
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1344": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6907
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1345": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6907
      ],
      "op": "LT",
      "path": "1"
    },
    "1346": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6907
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x547"
    },
    "1349": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6907
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1350": {
      "dev": "Index out of range",
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6907
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1351": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6907
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1352": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6907
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1354": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6907
      ],
      "op": "MUL",
      "path": "1"
    },
    "1355": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6907
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1357": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6907
      ],
      "op": "ADD",
      "path": "1"
    },
    "1358": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6907
      ],
      "op": "ADD",
      "path": "1"
    },
    "1359": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6876,
        6907
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1360": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6869,
        6907
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1361": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6869,
        6907
      ],
      "op": "POP",
      "path": "1"
    },
    "1362": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6869,
        6907
      ],
      "op": "POP",
      "path": "1"
    },
    "1363": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6869,
        6907
      ],
      "op": "POP",
      "path": "1"
    },
    "1364": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1365": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "1366": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1367": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "POP",
      "path": "1"
    },
    "1368": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "POP",
      "path": "1"
    },
    "1369": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "POP",
      "path": "1"
    },
    "1370": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "POP",
      "path": "1"
    },
    "1371": {
      "fn": "Resolver.getAmountOut",
      "offset": [
        6031,
        6997
      ],
      "op": "POP",
      "path": "1"
    },
    "1372": {
      "fn": "Resolver.getAmountOut",
      "jump": "o",
      "offset": [
        6031,
        6997
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1373": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1374": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3682,
        3689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1376": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3691,
        3707
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1378": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3682,
        3689
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1379": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3682,
        3689
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1380": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3682,
        3689
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1381": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3682,
        3689
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1382": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3848,
        3858
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1383": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3886,
        3894
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1384": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3923,
        3932
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1385": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3682,
        3689
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1386": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3986,
        4992
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1387": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4006,
        4013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1389": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4006,
        4020
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1390": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4002,
        4020
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1391": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4002,
        4020
      ],
      "op": "LT",
      "path": "1"
    },
    "1392": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3986,
        4992
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1393": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3986,
        4992
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x682"
    },
    "1396": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3986,
        4992
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1397": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4101,
        4107
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1399": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4097,
        4982
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1400": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4117,
        4132
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1402": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4117,
        4139
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1403": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4113,
        4139
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1404": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4113,
        4139
      ],
      "op": "LT",
      "path": "1"
    },
    "1405": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4097,
        4982
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1406": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4097,
        4982
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x679"
    },
    "1409": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4097,
        4982
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1410": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4244,
        4266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1412": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4297
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1414": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4298,
        4299
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1415": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1416": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1417": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1418": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "LT",
      "path": "1"
    },
    "1419": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x590"
    },
    "1422": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1423": {
      "dev": "Index out of range",
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1424": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1425": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1427": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1428": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1429": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1430": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1432": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1433": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1434": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1435": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "ADD",
      "path": "1"
    },
    "1436": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1443": {
      "op": "SHL"
    },
    "1444": {
      "op": "SUB"
    },
    "1445": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4300
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1446": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4300
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1447": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4300
      ],
      "op": "AND",
      "path": "1"
    },
    "1448": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1449": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4282,
        4300
      ],
      "op": "AND",
      "path": "1"
    },
    "1450": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4300
      ],
      "op": "EQ",
      "path": "1"
    },
    "1451": {
      "branch": 26,
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4300
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1452": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4333
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D8"
    },
    "1455": {
      "branch": 26,
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4333
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1456": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4333
      ],
      "op": "POP",
      "path": "1"
    },
    "1457": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4330
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1459": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4331,
        4332
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1460": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1461": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1462": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1463": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "LT",
      "path": "1"
    },
    "1464": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5BD"
    },
    "1467": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1468": {
      "dev": "Index out of range",
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1469": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1470": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1472": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1473": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1474": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1475": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1477": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1478": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1479": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1480": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "ADD",
      "path": "1"
    },
    "1481": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1488": {
      "op": "SHL"
    },
    "1489": {
      "op": "SUB"
    },
    "1490": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4304,
        4333
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1491": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4304,
        4333
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1492": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4304,
        4333
      ],
      "op": "AND",
      "path": "1"
    },
    "1493": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1494": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4315,
        4333
      ],
      "op": "AND",
      "path": "1"
    },
    "1495": {
      "branch": 27,
      "fn": "Resolver.findBestPath",
      "offset": [
        4304,
        4333
      ],
      "op": "EQ",
      "path": "1"
    },
    "1496": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4333
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1497": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4367
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x603"
    },
    "1500": {
      "branch": 27,
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4367
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1501": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1503": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4365,
        4366
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1504": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1505": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1506": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1507": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "LT",
      "path": "1"
    },
    "1508": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5E9"
    },
    "1511": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1512": {
      "dev": "Index out of range",
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1513": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1514": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1516": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1517": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1518": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1519": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1521": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1522": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1523": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1524": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "ADD",
      "path": "1"
    },
    "1525": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1532": {
      "op": "SHL"
    },
    "1533": {
      "op": "SUB"
    },
    "1534": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4349,
        4367
      ],
      "op": "AND",
      "path": "1"
    },
    "1535": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4367
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x606"
    },
    "1538": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4367
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1539": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4367
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1540": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4344,
        4345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1542": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4269,
        4367
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1543": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4244,
        4367
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1544": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4244,
        4367
      ],
      "op": "POP",
      "path": "1"
    },
    "1545": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4455,
        4472
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1547": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4475,
        4667
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x638"
    },
    "1550": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4516
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1552": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4517,
        4518
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1553": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1554": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1555": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1556": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "LT",
      "path": "1"
    },
    "1557": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x61A"
    },
    "1560": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1561": {
      "dev": "Index out of range",
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1562": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1563": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1565": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1566": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1567": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1568": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1570": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1571": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1572": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1573": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "ADD",
      "path": "1"
    },
    "1574": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1581": {
      "op": "SHL"
    },
    "1582": {
      "op": "SUB"
    },
    "1583": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4509,
        4519
      ],
      "op": "AND",
      "path": "1"
    },
    "1584": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4542,
        4550
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1585": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4573,
        4582
      ],
      "op": "DUP10",
      "path": "1"
    },
    "1586": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4605,
        4619
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1587": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4642,
        4649
      ],
      "op": "DUP11",
      "path": "1"
    },
    "1588": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4475,
        4487
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x295"
    },
    "1591": {
      "fn": "Resolver.findBestPath",
      "jump": "i",
      "offset": [
        4475,
        4667
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1592": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4475,
        4667
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1593": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4455,
        4667
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1594": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4455,
        4667
      ],
      "op": "POP",
      "path": "1"
    },
    "1595": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4776,
        4789
      ],
      "op": "DUP10",
      "path": "1"
    },
    "1596": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4764,
        4773
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1597": {
      "branch": 28,
      "fn": "Resolver.findBestPath",
      "offset": [
        4764,
        4789
      ],
      "op": "GT",
      "path": "1"
    },
    "1598": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4761,
        4968
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1599": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4761,
        4968
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66F"
    },
    "1602": {
      "branch": 28,
      "fn": "Resolver.findBestPath",
      "offset": [
        4761,
        4968
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1603": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4829,
        4838
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 9
    },
    "1604": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4813,
        4838
      ],
      "op": "SWAP10",
      "path": "1"
    },
    "1605": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4813,
        4838
      ],
      "op": "POP",
      "path": "1"
    },
    "1606": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4888
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x0"
    },
    "1608": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4889,
        4890
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1609": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1610": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1611": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1612": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "LT",
      "path": "1"
    },
    "1613": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x652"
    },
    "1616": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1617": {
      "dev": "Index out of range",
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1618": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1619": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1621": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1622": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1623": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1624": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1626": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1627": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1628": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1629": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "ADD",
      "path": "1"
    },
    "1630": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1637": {
      "op": "SHL"
    },
    "1638": {
      "op": "SUB"
    },
    "1639": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "AND",
      "path": "1"
    },
    "1640": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4881,
        4891
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "1641": {
      "op": "POP"
    },
    "1642": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4935,
        4949
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 11
    },
    "1643": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4935,
        4949
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "1644": {
      "op": "POP"
    },
    "1645": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4935,
        4949
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1646": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4935,
        4949
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1647": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4761,
        4968
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1648": {
      "op": "POP"
    },
    "1649": {
      "op": "POP"
    },
    "1650": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4141,
        4144
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 12,
      "value": "0x1"
    },
    "1652": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4141,
        4144
      ],
      "op": "ADD",
      "path": "1"
    },
    "1653": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4097,
        4982
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x577"
    },
    "1656": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4097,
        4982
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1657": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4097,
        4982
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1658": {
      "op": "POP"
    },
    "1659": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4022,
        4025
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 13,
      "value": "0x1"
    },
    "1661": {
      "fn": "Resolver.findBestPath",
      "offset": [
        4022,
        4025
      ],
      "op": "ADD",
      "path": "1"
    },
    "1662": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3986,
        4992
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x56A"
    },
    "1665": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3986,
        4992
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1666": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3986,
        4992
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1667": {
      "op": "POP"
    },
    "1668": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5002,
        5027
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1676": {
      "op": "SHL"
    },
    "1677": {
      "op": "SUB"
    },
    "1678": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5113,
        5145
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1679": {
      "branch": 29,
      "fn": "Resolver.findBestPath",
      "offset": [
        5113,
        5145
      ],
      "op": "AND",
      "path": "1"
    },
    "1680": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5110,
        5492
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x714"
    },
    "1683": {
      "branch": 29,
      "fn": "Resolver.findBestPath",
      "offset": [
        5110,
        5492
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1684": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x40"
    },
    "1686": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1687": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1688": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5186,
        5187
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1690": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1691": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1692": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1693": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1695": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1696": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "ADD",
      "path": "1"
    },
    "1697": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1698": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1699": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1700": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1701": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1703": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1704": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "ADD",
      "path": "1"
    },
    "1705": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1706": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1707": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1708": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1709": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "CALLDATACOPY",
      "path": "1"
    },
    "1710": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "ADD",
      "path": "1"
    },
    "1711": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1712": {
      "op": "POP"
    },
    "1713": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5172,
        5188
      ],
      "op": "POP",
      "path": "1"
    },
    "1714": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5161,
        5188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1715": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5161,
        5188
      ],
      "op": "POP",
      "path": "1"
    },
    "1716": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5216,
        5225
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 15
    },
    "1717": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5210
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1718": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5211,
        5212
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1720": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5213
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1721": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5213
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1722": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5213
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1723": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5213
      ],
      "op": "LT",
      "path": "1"
    },
    "1724": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5213
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C1"
    },
    "1727": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5213
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1728": {
      "dev": "Index out of range",
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5213
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1729": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5213
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1730": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5213
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1732": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5213
      ],
      "op": "MUL",
      "path": "1"
    },
    "1733": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5213
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1735": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5213
      ],
      "op": "ADD",
      "path": "1"
    },
    "1736": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5213
      ],
      "op": "ADD",
      "path": "1"
    },
    "1737": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5225
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1744": {
      "op": "SHL"
    },
    "1745": {
      "op": "SUB"
    },
    "1746": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5225
      ],
      "op": "AND",
      "path": "1"
    },
    "1747": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5225
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1748": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5225
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1755": {
      "op": "SHL"
    },
    "1756": {
      "op": "SUB"
    },
    "1757": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5225
      ],
      "op": "AND",
      "path": "1"
    },
    "1758": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5225
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1759": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5225
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1760": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5225
      ],
      "op": "POP",
      "path": "1"
    },
    "1761": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5202,
        5225
      ],
      "op": "POP",
      "path": "1"
    },
    "1762": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5253,
        5260
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 16
    },
    "1763": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5247
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1764": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5248,
        5249
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1766": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1767": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5250
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1768": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1769": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5250
      ],
      "op": "LT",
      "path": "1"
    },
    "1770": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5250
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6EF"
    },
    "1773": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5250
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1774": {
      "dev": "Index out of range",
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5250
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1775": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5250
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1776": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1778": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5250
      ],
      "op": "MUL",
      "path": "1"
    },
    "1779": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1781": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5250
      ],
      "op": "ADD",
      "path": "1"
    },
    "1782": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5250
      ],
      "op": "ADD",
      "path": "1"
    },
    "1783": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5260
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1790": {
      "op": "SHL"
    },
    "1791": {
      "op": "SUB"
    },
    "1792": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5260
      ],
      "op": "AND",
      "path": "1"
    },
    "1793": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5260
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1794": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5260
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1801": {
      "op": "SHL"
    },
    "1802": {
      "op": "SUB"
    },
    "1803": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5260
      ],
      "op": "AND",
      "path": "1"
    },
    "1804": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5260
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1805": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5260
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1806": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5260
      ],
      "op": "POP",
      "path": "1"
    },
    "1807": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5239,
        5260
      ],
      "op": "POP",
      "path": "1"
    },
    "1808": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5110,
        5492
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C0"
    },
    "1811": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5110,
        5492
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1812": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5110,
        5492
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1813": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x40"
    },
    "1815": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1816": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1817": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5361,
        5362
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1819": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1820": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1821": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1822": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "1824": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1825": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "ADD",
      "path": "1"
    },
    "1826": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1827": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1828": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1829": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1830": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1832": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1833": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "ADD",
      "path": "1"
    },
    "1834": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1836": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1837": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1838": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1839": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "CALLDATACOPY",
      "path": "1"
    },
    "1840": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "ADD",
      "path": "1"
    },
    "1841": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1842": {
      "op": "POP"
    },
    "1843": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5347,
        5363
      ],
      "op": "POP",
      "path": "1"
    },
    "1844": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5336,
        5363
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1845": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5336,
        5363
      ],
      "op": "POP",
      "path": "1"
    },
    "1846": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5391,
        5400
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 18
    },
    "1847": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5385
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1848": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5386,
        5387
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1850": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5388
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1851": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5388
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1852": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5388
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1853": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5388
      ],
      "op": "LT",
      "path": "1"
    },
    "1854": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5388
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x743"
    },
    "1857": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5388
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1858": {
      "dev": "Index out of range",
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5388
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1859": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5388
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1860": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5388
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1862": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5388
      ],
      "op": "MUL",
      "path": "1"
    },
    "1863": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5388
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1865": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5388
      ],
      "op": "ADD",
      "path": "1"
    },
    "1866": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5388
      ],
      "op": "ADD",
      "path": "1"
    },
    "1867": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5400
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1874": {
      "op": "SHL"
    },
    "1875": {
      "op": "SUB"
    },
    "1876": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5400
      ],
      "op": "AND",
      "path": "1"
    },
    "1877": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5400
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1878": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5400
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1885": {
      "op": "SHL"
    },
    "1886": {
      "op": "SUB"
    },
    "1887": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5400
      ],
      "op": "AND",
      "path": "1"
    },
    "1888": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5400
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1889": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5400
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1890": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5400
      ],
      "op": "POP",
      "path": "1"
    },
    "1891": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5377,
        5400
      ],
      "op": "POP",
      "path": "1"
    },
    "1892": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5428,
        5446
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 19
    },
    "1893": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5422
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1894": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5423,
        5424
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1896": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5425
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1897": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5425
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1898": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5425
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1899": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5425
      ],
      "op": "LT",
      "path": "1"
    },
    "1900": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5425
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x771"
    },
    "1903": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5425
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1904": {
      "dev": "Index out of range",
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5425
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1905": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5425
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1906": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5425
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1908": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5425
      ],
      "op": "MUL",
      "path": "1"
    },
    "1909": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5425
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1911": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5425
      ],
      "op": "ADD",
      "path": "1"
    },
    "1912": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5425
      ],
      "op": "ADD",
      "path": "1"
    },
    "1913": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1920": {
      "op": "SHL"
    },
    "1921": {
      "op": "SUB"
    },
    "1922": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5446
      ],
      "op": "AND",
      "path": "1"
    },
    "1923": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5446
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1924": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1931": {
      "op": "SHL"
    },
    "1932": {
      "op": "SUB"
    },
    "1933": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5446
      ],
      "op": "AND",
      "path": "1"
    },
    "1934": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5446
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1935": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5446
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1936": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5446
      ],
      "op": "POP",
      "path": "1"
    },
    "1937": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5414,
        5446
      ],
      "op": "POP",
      "path": "1"
    },
    "1938": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5474,
        5481
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 20
    },
    "1939": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1940": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5469,
        5470
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1942": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5471
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1943": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5471
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1944": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5471
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1945": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5471
      ],
      "op": "LT",
      "path": "1"
    },
    "1946": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5471
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x79F"
    },
    "1949": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5471
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1950": {
      "dev": "Index out of range",
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5471
      ],
      "op": "INVALID",
      "path": "1"
    },
    "1951": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5471
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1952": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5471
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1954": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5471
      ],
      "op": "MUL",
      "path": "1"
    },
    "1955": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5471
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1957": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5471
      ],
      "op": "ADD",
      "path": "1"
    },
    "1958": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5471
      ],
      "op": "ADD",
      "path": "1"
    },
    "1959": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5481
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1966": {
      "op": "SHL"
    },
    "1967": {
      "op": "SUB"
    },
    "1968": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5481
      ],
      "op": "AND",
      "path": "1"
    },
    "1969": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5481
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1970": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5481
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1977": {
      "op": "SHL"
    },
    "1978": {
      "op": "SUB"
    },
    "1979": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5481
      ],
      "op": "AND",
      "path": "1"
    },
    "1980": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5481
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1981": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5481
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1982": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5481
      ],
      "op": "POP",
      "path": "1"
    },
    "1983": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5460,
        5481
      ],
      "op": "POP",
      "path": "1"
    },
    "1984": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5110,
        5492
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1985": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5509,
        5519
      ],
      "op": "SWAP5",
      "path": "1",
      "statement": 21
    },
    "1986": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5509,
        5519
      ],
      "op": "SWAP13",
      "path": "1"
    },
    "1987": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5509,
        5519
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1988": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5509,
        5519
      ],
      "op": "SWAP12",
      "path": "1"
    },
    "1989": {
      "op": "POP"
    },
    "1990": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5531,
        5544
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1991": {
      "fn": "Resolver.findBestPath",
      "offset": [
        5531,
        5544
      ],
      "op": "SWAP10",
      "path": "1"
    },
    "1992": {
      "op": "POP"
    },
    "1993": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1994": {
      "fn": "Resolver.findBestPath",
      "offset": [
        3550,
        5552
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "1995": {
      "op": "POP"
    },
    "1996": {
      "op": "POP"
    },
    "1997": {
      "op": "POP"
    },
    "1998": {
      "op": "POP"
    },
    "1999": {
      "op": "POP"
    },
    "2000": {
      "op": "POP"
    },
    "2001": {
      "op": "POP"
    },
    "2002": {
      "op": "POP"
    },
    "2003": {
      "fn": "Resolver.findBestPath",
      "jump": "o",
      "offset": [
        3550,
        5552
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2004": {
      "offset": [
        935,
        1481
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2005": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2007": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2008": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2009": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2010": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2011": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "LT",
      "path": "1"
    },
    "2012": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27B"
    },
    "2015": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2016": {
      "fn": "Resolver.findBestPath",
      "offset": [
        935,
        1481
      ],
      "op": "INVALID",
      "path": "1"
    },
    "2017": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2018": {
      "fn": "Resolver.checker",
      "offset": [
        2730,
        2734
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2020": {
      "fn": "Resolver.checker",
      "offset": [
        2736,
        2748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2022": {
      "fn": "Resolver.checker",
      "offset": [
        2833,
        2847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2024": {
      "fn": "Resolver.checker",
      "offset": [
        2849,
        2870
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2026": {
      "fn": "Resolver.checker",
      "offset": [
        2876,
        2923
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F4"
    },
    "2029": {
      "fn": "Resolver.checker",
      "offset": [
        2889,
        2899
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2030": {
      "fn": "Resolver.checker",
      "offset": [
        2901,
        2909
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2031": {
      "fn": "Resolver.checker",
      "offset": [
        2911,
        2922
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2032": {
      "fn": "Resolver.checker",
      "offset": [
        2876,
        2888
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x55D"
    },
    "2035": {
      "fn": "Resolver.checker",
      "jump": "i",
      "offset": [
        2876,
        2923
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2036": {
      "fn": "Resolver.checker",
      "offset": [
        2876,
        2923
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2037": {
      "fn": "Resolver.checker",
      "offset": [
        2832,
        2923
      ],
      "op": "POP",
      "path": "1"
    },
    "2038": {
      "fn": "Resolver.checker",
      "offset": [
        2832,
        2923
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2039": {
      "fn": "Resolver.checker",
      "offset": [
        2832,
        2923
      ],
      "op": "POP",
      "path": "1"
    },
    "2040": {
      "fn": "Resolver.checker",
      "offset": [
        2832,
        2923
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2041": {
      "fn": "Resolver.checker",
      "offset": [
        2832,
        2923
      ],
      "op": "POP",
      "path": "1"
    },
    "2042": {
      "fn": "Resolver.checker",
      "offset": [
        3039,
        3043
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 22,
      "value": "0x1"
    },
    "2044": {
      "fn": "Resolver.checker",
      "offset": [
        3098,
        3134
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC71A6D06"
    },
    "2049": {
      "fn": "Resolver.checker",
      "offset": [
        3098,
        3134
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2051": {
      "fn": "Resolver.checker",
      "offset": [
        3098,
        3134
      ],
      "op": "SHL",
      "path": "1"
    },
    "2052": {
      "fn": "Resolver.checker",
      "offset": [
        3153,
        3161
      ],
      "op": "DUP11",
      "path": "1"
    },
    "2053": {
      "fn": "Resolver.checker",
      "offset": [
        3180,
        3188
      ],
      "op": "DUP11",
      "path": "1"
    },
    "2054": {
      "fn": "Resolver.checker",
      "offset": [
        3207,
        3213
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2055": {
      "fn": "Resolver.checker",
      "offset": [
        3232,
        3236
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2056": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2058": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2059": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2061": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "ADD",
      "path": "1"
    },
    "2062": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2063": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2064": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2065": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2066": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2068": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "ADD",
      "path": "1"
    },
    "2069": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2070": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2071": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2072": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2074": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "ADD",
      "path": "1"
    },
    "2075": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2082": {
      "op": "SHL"
    },
    "2083": {
      "op": "SUB"
    },
    "2084": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "AND",
      "path": "1"
    },
    "2085": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2086": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2087": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2089": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "ADD",
      "path": "1"
    },
    "2090": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2091": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2093": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "ADD",
      "path": "1"
    },
    "2094": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2095": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2096": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "SUB",
      "path": "1"
    },
    "2097": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2098": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2099": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2100": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2101": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2102": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2103": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2104": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2105": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2107": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "ADD",
      "path": "1"
    },
    "2108": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2109": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2110": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2111": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2112": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2113": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2115": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "ADD",
      "path": "1"
    },
    "2116": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2117": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2119": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MUL",
      "path": "1"
    },
    "2120": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2121": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2122": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2123": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2125": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2126": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2127": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2128": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "LT",
      "path": "1"
    },
    "2129": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2130": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x865"
    },
    "2133": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2134": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2135": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2136": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "ADD",
      "path": "1"
    },
    "2137": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2138": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2139": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2140": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "ADD",
      "path": "1"
    },
    "2141": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2142": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2144": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "ADD",
      "path": "1"
    },
    "2145": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x84D"
    },
    "2148": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2149": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2150": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2151": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2152": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2153": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2154": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2155": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2156": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "ADD",
      "path": "1"
    },
    "2157": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "2158": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2159": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2160": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2161": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2162": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2163": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2164": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2166": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2167": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2169": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2170": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2171": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "SUB",
      "path": "1"
    },
    "2172": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "SUB",
      "path": "1"
    },
    "2173": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2174": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2175": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2176": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2178": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2179": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2186": {
      "op": "SHL"
    },
    "2187": {
      "op": "SUB"
    },
    "2188": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "NOT",
      "path": "1"
    },
    "2189": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "AND",
      "path": "1"
    },
    "2190": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2192": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2193": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "ADD",
      "path": "1"
    },
    "2194": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2195": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2202": {
      "op": "SHL"
    },
    "2203": {
      "op": "SUB"
    },
    "2204": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2205": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2206": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2207": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "AND",
      "path": "1"
    },
    "2208": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "OR",
      "path": "1"
    },
    "2209": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2210": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2211": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2212": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2213": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2214": {
      "fn": "Resolver.checker",
      "offset": [
        3058,
        3250
      ],
      "op": "POP",
      "path": "1"
    },
    "2215": {
      "fn": "Resolver.checker",
      "offset": [
        3018,
        3260
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2216": {
      "fn": "Resolver.checker",
      "offset": [
        3018,
        3260
      ],
      "op": "POP",
      "path": "1"
    },
    "2217": {
      "fn": "Resolver.checker",
      "offset": [
        3018,
        3260
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2218": {
      "fn": "Resolver.checker",
      "offset": [
        3018,
        3260
      ],
      "op": "POP",
      "path": "1"
    },
    "2219": {
      "fn": "Resolver.checker",
      "offset": [
        3018,
        3260
      ],
      "op": "POP",
      "path": "1"
    },
    "2220": {
      "fn": "Resolver.checker",
      "offset": [
        3018,
        3260
      ],
      "op": "POP",
      "path": "1"
    },
    "2221": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "2222": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "2223": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "2224": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2225": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "2226": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "2227": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "2228": {
      "fn": "Resolver.checker",
      "offset": [
        2547,
        3267
      ],
      "op": "POP",
      "path": "1"
    },
    "2229": {
      "fn": "Resolver.checker",
      "jump": "o",
      "offset": [
        2547,
        3267
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2230": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2231": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2233": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "25",
      "statement": 23,
      "value": "0x8F8"
    },
    "2236": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2237": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2238": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2240": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2241": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2242": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2244": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "25"
    },
    "2245": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2247": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2248": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2249": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1E"
    },
    "2251": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2252": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2253": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2255": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "25"
    },
    "2256": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "2289": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2290": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2291": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "25"
    },
    "2292": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x8FF"
    },
    "2295": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2296": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2297": {
      "fn": "SafeMath.sub",
      "offset": [
        1351,
        1401
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "2298": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2299": {
      "op": "POP"
    },
    "2300": {
      "op": "POP"
    },
    "2301": {
      "op": "POP"
    },
    "2302": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2303": {
      "fn": "SafeMath.sub",
      "offset": [
        1692,
        1879
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2304": {
      "fn": "SafeMath.sub",
      "offset": [
        1778,
        1785
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2306": {
      "fn": "SafeMath.sub",
      "offset": [
        1813,
        1825
      ],
      "op": "DUP2",
      "path": "25",
      "statement": 24
    },
    "2307": {
      "fn": "SafeMath.sub",
      "offset": [
        1805,
        1811
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2308": {
      "fn": "SafeMath.sub",
      "offset": [
        1805,
        1811
      ],
      "op": "DUP5",
      "path": "25"
    },
    "2309": {
      "fn": "SafeMath.sub",
      "offset": [
        1805,
        1811
      ],
      "op": "GT",
      "path": "25"
    },
    "2310": {
      "branch": 30,
      "fn": "SafeMath.sub",
      "offset": [
        1805,
        1811
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2311": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x98E"
    },
    "2314": {
      "branch": 30,
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2315": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2317": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2318": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2322": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2324": {
      "op": "SHL"
    },
    "2325": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2326": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2327": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "2329": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "25"
    },
    "2330": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2331": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2332": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2334": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "25"
    },
    "2335": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2336": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2337": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SUB",
      "path": "25"
    },
    "2338": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2339": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2340": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2341": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2342": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2343": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2344": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2345": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2346": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2348": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "25"
    },
    "2349": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2350": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "25"
    },
    "2351": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2352": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2353": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2354": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2356": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "25"
    },
    "2357": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2358": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2359": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2360": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2361": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "2363": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2364": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2365": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2366": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "LT",
      "path": "25"
    },
    "2367": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2368": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x953"
    },
    "2371": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2372": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2373": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2374": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "25"
    },
    "2375": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2376": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2377": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2378": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "25"
    },
    "2379": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2380": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2382": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "25"
    },
    "2383": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x93B"
    },
    "2386": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMP",
      "path": "25"
    },
    "2387": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2388": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "25"
    },
    "2389": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "25"
    },
    "2390": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "25"
    },
    "2391": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "25"
    },
    "2392": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2393": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "25"
    },
    "2394": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2395": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2396": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "25"
    },
    "2397": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2398": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "2400": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "AND",
      "path": "25"
    },
    "2401": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2402": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "2403": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x980"
    },
    "2406": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "2407": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2408": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP3",
      "path": "25"
    },
    "2409": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SUB",
      "path": "25"
    },
    "2410": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2411": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2412": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1"
    },
    "2414": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "25"
    },
    "2415": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2417": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SUB",
      "path": "25"
    },
    "2418": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x100"
    },
    "2421": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "EXP",
      "path": "25"
    },
    "2422": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SUB",
      "path": "25"
    },
    "2423": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "NOT",
      "path": "25"
    },
    "2424": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "AND",
      "path": "25"
    },
    "2425": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "25"
    },
    "2426": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "2427": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "2429": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "25"
    },
    "2430": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2431": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "25"
    },
    "2432": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2433": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "25"
    },
    "2434": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "2435": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "25"
    },
    "2436": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "25"
    },
    "2437": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "POP",
      "path": "25"
    },
    "2438": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "2440": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "2441": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "25"
    },
    "2442": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "2443": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SUB",
      "path": "25"
    },
    "2444": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2445": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "REVERT",
      "path": "25"
    },
    "2446": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "2447": {
      "op": "POP"
    },
    "2448": {
      "op": "POP"
    },
    "2449": {
      "op": "POP"
    },
    "2450": {
      "fn": "SafeMath.sub",
      "offset": [
        1848,
        1853
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2451": {
      "fn": "SafeMath.sub",
      "offset": [
        1848,
        1853
      ],
      "op": "SUB",
      "path": "25"
    },
    "2452": {
      "fn": "SafeMath.sub",
      "offset": [
        1848,
        1853
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "2453": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1692,
        1879
      ],
      "op": "JUMP",
      "path": "25"
    }
  },
  "sha1": "ebc3208e3b8afb6b5efcb51fa5c272e38ebe0137",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\nimport \"../interfaces/IController.sol\";\nimport \"../interfaces/IUniswapV2Router02.sol\";\nimport \"./openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\n\n\n/**\n* @title Corn Finance Gelato Resolver\n* @author C.W.B.\n*\n* @notice When resolver contracts are called, the returned data is used as the\n* input data on a seperate call. This means that the call to the resolver contract\n* does not affect the gas used on the 'fillOrderGelato()' call.\n*\n* This resolver contract is used for finding the best swap path across numerous\n* Uniswap V2 Routers. Paths will be either:\n*   a.) from token --> to token\n*   b.) from token --> connector token --> to token\n* The best path and router are then encoded with the respective order data. The\n* encoded data is used as input data for 'fillOrderGelato()' in the Controller\n* contract.\n*/\ncontract Resolver {\n    using SafeMath for uint256;\n\n    IUniswapV2Router02[] public routers = [\n        IUniswapV2Router02(0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff), // Quickswap\n        IUniswapV2Router02(0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506), // Sushiswap\n        IUniswapV2Router02(0x94930a328162957FF1dd48900aF67B5439336cBD), // Polycat\n        IUniswapV2Router02(0xC0788A3aD43d79aa53B09c2EaCc313A787d1d607), // ApeSwap\n        IUniswapV2Router02(0xA102072A4C07F06EC3B4900FDC4C7B80b6c57429), // Dfyn\n        IUniswapV2Router02(0x3a1D87f206D12415f5b0A33E786967680AAb4f6d)  // WaultSwap\n    ];\n    address[] public connectorTokens = [\n        0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063, // DAI\n        0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174, // USDC\n        0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270, // WMATIC\n        0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619, // WETH\n        0xc2132D05D31c914a87C6611C10748AEb04B58e8F, // USDT\n        0x831753DD7087CaC61aB5644b308642cc1c33Dc13  // QUICK\n    ];\n\n    // --------------------------------------------------------------------------------\n\n    /**\n    * @dev Gelato executor will call this function before calling 'fillOrderGelato()'\n    * in the Controller contract.\n    * @param _vaultId: Vault that holds the order\n    * @param _orderId: Order to fill\n    * @param _fromToken: ERC20 token being swapped\n    * @param _toToken: ERC20 token received from swap\n    * @param _fromAmount: Amount of '_fromToken' going into the swap\n    * @return (true: Gelato executor call 'fillOrderGelato()'; false: Gelato executor \n    * will not call 'fillOrderGelato()', Input data for 'fillOrderGelato()')\n    */\n    function checker(\n        uint256 _vaultId, \n        uint256 _orderId, \n        address _fromToken, \n        address _toToken, \n        uint256 _fromAmount\n    ) public view returns (bool, bytes memory) {\n        // Find the best Uniswap V2 router and path for swapping tokens\n        (address router, address[] memory path, ) = findBestPath(_fromToken, _toToken, _fromAmount);\n\n        // Encode input data for when the Gelato executor calls 'fillOrderGelato()'\n        return (\n            true, \n            abi.encodeWithSelector(\n                IController.fillOrderGelato.selector, \n                _vaultId, \n                _orderId, \n                router, \n                path\n            )\n        );\n    }\n\n    // --------------------------------------------------------------------------------\n\n    /**\n    * @param _fromToken: ERC20 token being swapped\n    * @param _toToken: ERC20 token received from swap\n    * @param _amountIn: Amount of '_fromToken' going into the swap \n    */\n    function findBestPath(\n        address _fromToken, \n        address _toToken, \n        uint256 _amountIn\n    ) public view returns (address, address[] memory, uint256) {\n        uint256 bestAmountOut = 0;\n        address bestRouter;\n        address bestConnectorToken;\n\n        address fromToken = _fromToken;\n        address toToken = _toToken;\n        uint256 amountIn = _amountIn;\n\n        // Loop through all of the routers\n        for(uint i = 0; i < routers.length; i++) {\n            // Loop through all of the connector tokens\n            for(uint j = 0; j < connectorTokens.length; j++) {\n                // Connector token, 'from' token, and 'to' token must be unique\n                address connectorToken = fromToken == connectorTokens[j] || toToken == connectorTokens[j] ? address(0) : connectorTokens[j];\n                \n                // Get the 'to' amount from the swap\n                uint256 amountOut = getAmountOut(\n                    routers[i], \n                    amountIn, \n                    fromToken, \n                    connectorToken, \n                    toToken\n                );\n\n                // Current router and path produce the most amount out yet\n                if(amountOut > bestAmountOut) {\n                    bestAmountOut = amountOut;\n                    bestRouter = address(routers[i]);\n                    bestConnectorToken = connectorToken;\n                }\n            }\n        }\n\n        address[] memory bestPath;\n\n        // No connector token. Path is only 'from' token and 'to' token\n        if(bestConnectorToken == address(0)) {\n            bestPath = new address[](2);\n            bestPath[0] = fromToken;\n            bestPath[1] = toToken;\n        }\n\n        // Path has connector token\n        else {\n            bestPath = new address[](3);\n            bestPath[0] = fromToken;\n            bestPath[1] = bestConnectorToken;\n            bestPath[2] = toToken;\n        }\n        return (bestRouter, bestPath, bestAmountOut);\n    }\n\n    // --------------------------------------------------------------------------------\n\n    /**\n    * @param _router: Router used to perform a swap\n    * @param _amountIn: Amount of '_fromToken' going into the swap\n    * @param _fromToken: ERC20 token being swapped\n    * @param _connectorToken: ERC20 token that connects the 'from' and 'to' tokens\n    * @param _toToken: ERC20 token received from the swap\n    * @return Amount of '_toToken' received from the swap\n    */\n    function getAmountOut(\n        IUniswapV2Router02 _router, \n        uint256 _amountIn, \n        address _fromToken, \n        address _connectorToken, \n        address _toToken\n    ) public view returns (uint256) {\n        address[] memory _path;\n\n        // No connector token. Path is only 'from' token and 'to' token\n        if(_connectorToken == address(0)) {\n            _path = new address[](2);\n            _path[0] = _fromToken;\n            _path[1] = _toToken;\n        }\n        // Path has a connector token\n        else {\n            _path = new address[](3);\n            _path[0] = _fromToken;\n            _path[1] = _connectorToken;\n            _path[2] = _toToken;\n        }\n\n        // Get the 'to' amount from the swap\n        try _router.getAmountsOut(_amountIn, _path) returns (uint256[] memory amountsOut) {\n            return amountsOut[_path.length.sub(1)];\n        }\n        // Call reverted\n        catch {\n            return 0;\n        }\n    }\n}",
  "sourceMap": "935:546:1:-:0;878:6121;935:546;1002:42;878:6121;935:546;;;1087:42;935:546;;1172:42;935:546;;1255:42;935:546;;1338:42;935:546;;1418:42;935:546;;;;-1:-1:-1;;935:546:1;;:::i;:::-;-1:-1:-1;1487:404:1;;;;;;;;1532:42;1487:404;;1591:42;1487:404;;;;1651:42;1487:404;;;;;;;1713:42;1487:404;;;;1773:42;1487:404;;;;1833:42;1487:404;;;;;;;;;;:::i;:::-;;878:6121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;878:6121:1;-1:-1:-1;;;;;878:6121:1;;;;;;;;;;;-1:-1:-1;878:6121:1;;;;;;;-1:-1:-1;878:6121:1;;;-1:-1:-1;878:6121:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;;878:6121:1;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Resolver.sol",
  "type": "contract"
}